#!/usr/bin/env bash

# Function to display usage instructions
function show_usage {
    echo "Usage: [--video | --picture | --thumb] <url>"
    echo "  --video: Downloads only videos"
    echo "  --picture: Downloads only pictures"
    echo "  --thumb: Downloads only thumbnails"
    echo "  <url>:   The link to download"
    exit 1
}

# Function to download thumbnails
function download_thumbnail {
    local url="$1"
    local tmpdir=$(mktemp -d)  # Create a temporary directory for thumbnails

    # Use yt-dlp to download thumbnails with a unique filename
    yt-dlp --write-thumbnail --skip-download --convert-thumbnails png --output "${tmpdir}/%(title)s [%(id)s].%(ext)s" "$url" 2>/dev/null
    
    # Move all downloaded thumbnails to the current directory
    local thumbnails=( "${tmpdir}"/*.png )
    
    if [[ -e "${thumbnails[0]}" ]]; then
        for thumbnail in "${thumbnails[@]}"; do
            mv "$thumbnail" ./  # Move each thumbnail to the current directory
            echo "Thumbnail saved as: $(basename "$thumbnail")"
        done
    else
        echo "No thumbnails found."
    fi

    # Clean up temporary directory
    rm -rf "$tmpdir"
}

# Check for the presence of the "--video", "--picture", or "--thumb" flag
if [ "$1" == "--video" ]; then
    shift  # Remove the flag from arguments
    gallery-dl --filter "extension in ('mp4', 'm4v', 'webm')" "$@"
elif [ "$1" == "--picture" ]; then
    shift  # Remove the flag from arguments
    gallery-dl --filter "extension in ('jpg', 'jpeg', 'png', 'gif', 'webp')" "$@"
elif [ "$1" == "--thumb" ]; then
    shift  # Remove the flag from arguments
    download_thumbnail "$1"
elif [ $# -eq 1 ]; then
    gallery-dl "$1"
else
    show_usage
fi