#!/usr/bin/env bash

# Function to delete matching files based on base name
delete_matching_files() {
    local base="$1"

    for match in ./"$base".*; do
        [ -e "$match" ] || continue
        echo "Removing: $match"
        rm "$match"
    done
}

# Print formatted usage message
print_usage() {
    script_name="$(basename "$0")"
    cat <<EOF
Usage: $script_name [OPTION] <ARGUMENT>

Options:
  --f <filelist.txt>     Remove files matching names listed in the text file.
  --d <output_folder>    Remove files matching names in the specified folder.

Examples:
  $script_name --f files.txt
  $script_name --d /path/to/output_folder
EOF
}

# Check for valid flags and arguments
if [[ "$#" -ne 2 ]]; then
    print_usage
    exit 1
fi

flag="$1"
value="$2"

case "$flag" in
    --f)
        if [ ! -f "$value" ]; then
            echo "Error: '$value' is not a valid file."
            exit 1
        fi
        while IFS= read -r line || [[ -n "$line" ]]; do
            base="${line%.*}"
            delete_matching_files "$base"
        done < "$value"
        ;;
    --d)
        if [ ! -d "$value" ]; then
            echo "Error: '$value' is not a valid directory."
            exit 1
        fi
        for output_file in "$value"/*; do
            [ -e "$output_file" ] || continue
            filename=$(basename "$output_file")
            base="${filename%.*}"
            delete_matching_files "$base"
        done
        ;;
    *)
        echo "Invalid option: $flag"
        print_usage
        exit 1
        ;;
esac