/* config.h.in.  Generated automatically from configure.in by autoheader.  */

/* Define to one of `_getb67', `GETB67', `getb67' for Cray-2 and Cray-YMP
   systems. This function is required for `alloca.c' support on those systems.
   */
#cmakedefine CRAY_STACKSEG_END

/* Define if using `alloca.c'. */
#cmakedefine C_ALLOCA

/* Define if getaddrinfo returns AF_UNIX sockets */
#cmakedefine GETADDRINFO_RETURNS_UNIX

/* Define if you have `alloca', as a function or macro. */
#cmakedefine HAVE_ALLOCA

/* Define if you have the <alloca.h> header file. */
#cmakedefine HAVE_ALLOCA_H

/* Define if you have the <alsa/asoundlib.h> header file. */
#cmakedefine HAVE_ALSA_ASOUNDLIB_H

/* Define if you have the <argz.h> header file. */
#cmakedefine HAVE_ARGZ_H

/* Define if you want to use glibc facilities to emulate stdio accesses in
   artsdsp */
#cmakedefine HAVE_ARTSDSP_STDIO_EMU

/* Define if you have the <awe_voice.h> header file. */
#cmakedefine HAVE_AWE_VOICE_H

/* You _must_ have bool */
#cmakedefine HAVE_BOOL

/* Define if getaddrinfo is broken and should be replaced */
#cmakedefine HAVE_BROKEN_GETADDRINFO

/* Defines if bzip2 is compiled */
#cmakedefine HAVE_BZIP2_SUPPORT

/* Defines if your system has the crypt function */
#cmakedefine HAVE_CRYPT

/* Defines if you have CUPS (Common UNIX Printing System) */
#cmakedefine HAVE_CUPS

/* Define if you have the <dirent.h> header file, and it defines `DIR'. */
#cmakedefine HAVE_DIRENT_H

/* Define if you have the <dlfcn.h> header file. */
#cmakedefine HAVE_DLFCN_H

/* Define if your system has Linux Directory Notification */
#cmakedefine HAVE_DNOTIFY

/* Define if your system has libfam */
#cmakedefine HAVE_FAM

/* Define if you have the <float.h> header file. */
#cmakedefine HAVE_FLOAT_H

/* Define if you have the <fnmatch.h> header file. */
#cmakedefine HAVE_FNMATCH_H

/* Define if you have the `fork' function. */
#cmakedefine HAVE_FORK

/* Define if you have the `freeaddrinfo' function. */
#cmakedefine HAVE_FREEADDRINFO

/* Define if you have the <fstab.h> header file. */
#cmakedefine HAVE_FSTAB_H

/* Define if you have finite */
#cmakedefine HAVE_FUNC_FINITE

/* Define if you have isinf */
#cmakedefine HAVE_FUNC_ISINF

/* Define if you have isnan */
#cmakedefine HAVE_FUNC_ISNAN

/* Define if you have _finite */
#cmakedefine HAVE_FUNC__FINITE

/* Define if you have the `gai_strerror' function. */
#cmakedefine HAVE_GAI_STRERROR

/* Define if getaddrinfo is present */
#cmakedefine HAVE_GETADDRINFO

/* Define if you have the `getcwd' function. */
#cmakedefine HAVE_GETCWD

/* Define if you have getdomainname */
#cmakedefine HAVE_GETDOMAINNAME

/* Define if you have getdomainname prototype */
#cmakedefine HAVE_GETDOMAINNAME_PROTO

/* Define if you have the `getgroups' function. */
#cmakedefine HAVE_GETGROUPS

/* Define if you have the `gethostbyname2' function. */
#cmakedefine HAVE_GETHOSTBYNAME2

/* Define if you have the `gethostbyname2_r' function. */
#cmakedefine HAVE_GETHOSTBYNAME2_R

/* Define if you have the `gethostbyname_r' function. */
#cmakedefine HAVE_GETHOSTBYNAME_R

/* Define if you have gethostname */
#cmakedefine HAVE_GETHOSTNAME

/* Define if you have gethostname prototype */
#cmakedefine HAVE_GETHOSTNAME_PROTO

/* Define if you have the `getmntinfo' function. */
#cmakedefine HAVE_GETMNTINFO

/* Define if you have the `getnameinfo' function. */
#cmakedefine HAVE_GETNAMEINFO

/* Define if you have the `getpagesize' function. */
#cmakedefine HAVE_GETPAGESIZE

/* Define if you have the `getpeername' function. */
#cmakedefine HAVE_GETPEERNAME

/* Define if you have the `getpt' function. */
#cmakedefine HAVE_GETPT

/* Define if you have the `getsockname' function. */
#cmakedefine HAVE_GETSOCKNAME

/* Define if you have the `getsockopt' function. */
#cmakedefine HAVE_GETSOCKOPT

/* Define if you have the `gettimeofday' function. */
#cmakedefine HAVE_GETTIMEOFDAY

/* Define if you have the `grantpt' function. */
#cmakedefine HAVE_GRANTPT

/* Define if you have a STL implementation by HP */
#cmakedefine HAVE_HP_STL

/* Define if you have the <ieeefp.h> header file. */
#cmakedefine HAVE_IEEEFP_H

/* Define if you have the `inet_ntop' function. */
#cmakedefine HAVE_INET_NTOP

/* Define if you have the `inet_pton' function. */
#cmakedefine HAVE_INET_PTON

/* Define if you have the `initgroups' function. */
#cmakedefine HAVE_INITGROUPS

/* initgroups may exist but not its prototype (e.g. AIX<4.3.3:8) */
#cmakedefine HAVE_INITGROUPS_PROTO

/* Define if you have the <inttypes.h> header file. */
#cmakedefine HAVE_INTTYPES_H

/* Define if ioctl is declared as int ioctl(int d, int request,...) */
#cmakedefine HAVE_IOCTL_INT_INT_DOTS

/* Define if ioctl is declared as int ioctl(int d, unsigned long int
   request,...) */
#cmakedefine HAVE_IOCTL_INT_ULONGINT_DOTS

/* Define if ioctl is declared as int ioctl(int d, unsigned long request,...)
   */
#cmakedefine HAVE_IOCTL_INT_ULONG_DOTS

/* Define if your locale.h file contains LC_MESSAGES */
#cmakedefine HAVE_LC_MESSAGES

/* Define if you have libasound.so.1 (required for ALSA 0.5.x support) */
#cmakedefine HAVE_LIBASOUND

/* Define if you have libasound.so.2 (required for ALSA 0.9.x support) */
#cmakedefine HAVE_LIBASOUND2

/* Define if you have libaudiofile (required for playing wavs with aRts) */
#cmakedefine HAVE_LIBAUDIOFILE

/* Define if you have libaudioIO (required if you want to have libaudioio
   support) */
#cmakedefine HAVE_LIBAUDIOIO

/* Define if you have libaudio (required if you want to have NAS support) */
#cmakedefine HAVE_LIBAUDIONAS

/* Define if you have libjpeg */
#cmakedefine HAVE_LIBJPEG

/* Define if you have libpng */
#cmakedefine HAVE_LIBPNG

/* Define if you have a working libpthread (will enable threaded code) */
#cmakedefine HAVE_LIBPTHREAD

/* Define if you have libtiff */
#cmakedefine HAVE_LIBTIFF

/* Define if you have the <libutil.h> header file. */
#cmakedefine HAVE_LIBUTIL_H

/* Define if you have libz */
#cmakedefine HAVE_LIBZ

/* Define if you have the <limits.h> header file. */
#cmakedefine HAVE_LIMITS_H

/* Define if you have the <linux/awe_voice.h> header file. */
#cmakedefine HAVE_LINUX_AWE_VOICE_H

/* Define if you have the <linux/socket.h> header file. */
#cmakedefine HAVE_LINUX_SOCKET_H

/* Define if you have the <locale.h> header file. */
#cmakedefine HAVE_LOCALE_H

/* Define if you have the <machine/soundcard.h> header file. */
#cmakedefine HAVE_MACHINE_SOUNDCARD_H

/* Define if you have the <malloc.h> header file. */
#cmakedefine HAVE_MALLOC_H

/* Define if you have the <memory.h> header file. */
#cmakedefine HAVE_MEMORY_H

/* Define if you want MIT-SHM support */
#cmakedefine HAVE_MITSHM

/* Define if you have the `mkstemp' function. */
#cmakedefine HAVE_MKSTEMP

/* Define if you have the `mkstemps' function. */
#cmakedefine HAVE_MKSTEMPS

/* Define if you have a working `mmap' system call. */
#cmakedefine HAVE_MMAP

/* Define if you have the <mntent.h> header file. */
#cmakedefine HAVE_MNTENT_H

/* Define if you have the <monetary.h> header file. */
#cmakedefine HAVE_MONETARY_H

/* Define if you have the `munmap' function. */
#cmakedefine HAVE_MUNMAP

/* Define if you have the <ndir.h> header file, and it defines `DIR'. */
#cmakedefine HAVE_NDIR_H

/* Define if you have the <netinet/in.h> header file. */
#cmakedefine HAVE_NETINET_IN_H

/* Define if you have the <nl_types.h> header file. */
#cmakedefine HAVE_NL_TYPES_H

/* Define if you have OpenSSL < 0.9.6 */
#cmakedefine HAVE_OLD_SSL_API

/* Define if you have the `openpty' function. */
#cmakedefine HAVE_OPENPTY

/* Define if you have the <paths.h> header file. */
#cmakedefine HAVE_PATHS_H

/* Define if you have pcreposix libraries and header files. */
#cmakedefine HAVE_PCREPOSIX

/* Define if you have the <pthread/linuxthreads/pthread.h> header file. */
#cmakedefine HAVE_PTHREAD_LINUXTHREADS_PTHREAD_H

/* Define if you have the `ptsname' function. */
#cmakedefine HAVE_PTSNAME

/* Define if you have the <pty.h> header file. */
#cmakedefine HAVE_PTY_H

/* Define if you have the `putenv' function. */
#cmakedefine HAVE_PUTENV

/* Define if you have random */
#cmakedefine HAVE_RANDOM

/* Define if your system supports realtime scheduling */
#cmakedefine HAVE_REALTIME_SCHED

/* Define if you have the res_init function */
#cmakedefine HAVE_RES_INIT

/* Define if you have the `setegid' function. */
#cmakedefine HAVE_SETEGID

/* Define if you have the `setenv' function. */
#cmakedefine HAVE_SETENV

/* Define if you have the `seteuid' function. */
#cmakedefine HAVE_SETEUID

/* Define if you have the `setfsent' function. */
#cmakedefine HAVE_SETFSENT

/* Define if you have the `setgroups' function. */
#cmakedefine HAVE_SETGROUPS

/* Define if you have the `setlocale' function. */
#cmakedefine HAVE_SETLOCALE

/* Define if you have the `setmntent' function. */
#cmakedefine HAVE_SETMNTENT

/* Define if you have the `setpriority' function. */
#cmakedefine HAVE_SETPRIORITY

/* Define if you have a STL implementation by SGI */
#cmakedefine HAVE_SGI_STL

/* if setgroups() takes short *as second arg */
#cmakedefine HAVE_SHORTSETGROUPS

/* Define if you have the <sigaction.h> header file. */
#cmakedefine HAVE_SIGACTION_H

/* Define if libasound has snd_pcm_resume() */
#cmakedefine HAVE_SND_PCM_RESUME

/* Define if we have struct sockaddr_in6 in netinet/in.h */
#cmakedefine HAVE_SOCKADDR_IN6

/* Define if this system already has sin6_scope_id in sockaddr_in6 */
#cmakedefine HAVE_SOCKADDR_IN6_SCOPE_ID

/* Define if struct sockaddr has member sa_len */
#cmakedefine HAVE_SOCKADDR_SA_LEN

/* Define if you have the `socket' function. */
#cmakedefine HAVE_SOCKET

/* Define if you have the <socketbits.h> header file. */
#cmakedefine HAVE_SOCKETBITS_H

/* Define if you have the <soundcard.h> header file. */
#cmakedefine HAVE_SOUNDCARD_H

/* If we are going to use OpenSSL */
#cmakedefine HAVE_SSL

/* Define if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H

/* Define if you have the <stdlib.h> header file. */
#cmakedefine HAVE_STDLIB_H

/* Define if you have the `stpcpy' function. */
#cmakedefine HAVE_STPCPY

/* Define if you have the `strcasecmp' function. */
#cmakedefine HAVE_STRCASECMP

/* Define if you have the `strchr' function. */
#cmakedefine HAVE_STRCHR

/* Define if you have the `strfmon' function. */
#cmakedefine HAVE_STRFMON

/* Define if you have the <strings.h> header file. */
#cmakedefine HAVE_STRINGS_H

/* Define if you have the <string.h> header file. */
#cmakedefine HAVE_STRING_H

/* Define if netdb.h defines struct addrinfo */
#cmakedefine HAVE_STRUCT_ADDRINFO

/* Define if struct ucred is present from sys/socket.h */
#cmakedefine HAVE_STRUCT_UCRED

/* Define if you have the <sysent.h> header file. */
#cmakedefine HAVE_SYSENT_H

/* Define if you have the <sys/acl.h> header file. */
#cmakedefine HAVE_SYS_ACL_H

/* Define if you have the <sys/asoundlib.h> header file. */
#cmakedefine HAVE_SYS_ASOUNDLIB_H

/* Define if you have the <sys/cdefs.h> header file. */
#cmakedefine HAVE_SYS_CDEFS_H

/* Define if you have the <sys/dir.h> header file, and it defines `DIR'. */
#cmakedefine HAVE_SYS_DIR_H

/* Define if you have the <sys/mman.h> header file. */
#cmakedefine HAVE_SYS_MMAN_H

/* Define if you have the <sys/mnttab.h> header file. */
#cmakedefine HAVE_SYS_MNTTAB_H

/* Define if you have the <sys/mount.h> header file. */
#cmakedefine HAVE_SYS_MOUNT_H

/* Define if you have the <sys/ndir.h> header file, and it defines `DIR'. */
#cmakedefine HAVE_SYS_NDIR_H

/* Define if you have the <sys/param.h> header file. */
#cmakedefine HAVE_SYS_PARAM_H

/* Define if you have the <sys/select.h> header file. */
#cmakedefine HAVE_SYS_SELECT_H

/* Define if you have the <sys/socket.h> header file. */
#cmakedefine HAVE_SYS_SOCKET_H

/* Define if you have the <sys/soundcard.h> header file. */
#cmakedefine HAVE_SYS_SOUNDCARD_H

/* Define if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H

/* Define if you have the <sys/time.h> header file. */
#cmakedefine HAVE_SYS_TIME_H

/* Define if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H

/* Define if you have the <sys/ucred.h> header file. */
#cmakedefine HAVE_SYS_UCRED_H

/* Define if sys/stat.h declares S_ISSOCK. */
#cmakedefine HAVE_S_ISSOCK

/* C++ compiler supports template repository */
#cmakedefine HAVE_TEMPLATE_REPOSITORY

/* Define if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H

/* Define if you have the `unlockpt' function. */
#cmakedefine HAVE_UNLOCKPT

/* Define if you have the `unsetenv' function. */
#cmakedefine HAVE_UNSETENV

/* Define if you have the usleep function */
#cmakedefine HAVE_USLEEP

/* Define if you have the <util.h> header file. */
#cmakedefine HAVE_UTIL_H

/* Define if you have the <values.h> header file. */
#cmakedefine HAVE_VALUES_H

/* Define if you have the `vfork' function. */
#cmakedefine HAVE_VFORK

/* Define if you have the <vfork.h> header file. */
#cmakedefine HAVE_VFORK_H

/* Define, to enable volume management (Solaris 2.x), if you have -lvolmgt */
#cmakedefine HAVE_VOLMGT

/* Define if you have the `vsnprintf' function. */
#cmakedefine HAVE_VSNPRINTF

/* Define if `fork' works. */
#cmakedefine HAVE_WORKING_FORK

/* Define if `vfork' works. */
#cmakedefine HAVE_WORKING_VFORK

/* Define if you have the <X11/extensions/shape.h> header file. */
#cmakedefine HAVE_X11_EXTENSIONS_SHAPE_H

/* Define if you have the <X11/extensions/XShm.h> header file. */
#cmakedefine HAVE_X11_EXTENSIONS_XSHM_H

/* Define if you have the <X11/ICE/ICElib.h> header file. */
#cmakedefine HAVE_X11_ICE_ICELIB_H

/* Define if you want to use optimized x86 float to int conversion code */
#cmakedefine HAVE_X86_FLOAT_INT

/* Define if your assembler supports x86 SSE instructions */
#cmakedefine HAVE_X86_SSE

/* Define if you want Xinerama support */
#cmakedefine HAVE_XINERAMA

/* Define if you have the `_IceTransNoListen' function. */
#cmakedefine HAVE__ICETRANSNOLISTEN

/* Define if you have the </usr/src/sys/gnu/i386/isa/sound/awe_voice.h> header
   file. */
#cmakedefine HAVE__USR_SRC_SYS_GNU_I386_ISA_SOUND_AWE_VOICE_H

/* Define if you have the </usr/src/sys/i386/isa/sound/awe_voice.h> header
   file. */
#cmakedefine HAVE__USR_SRC_SYS_I386_ISA_SOUND_AWE_VOICE_H

/* Define if you have the `__argz_count' function. */
#cmakedefine HAVE___ARGZ_COUNT

/* Define if you have the `__argz_next' function. */
#cmakedefine HAVE___ARGZ_NEXT

/* Define if you have the `__argz_stringify' function. */
#cmakedefine HAVE___ARGZ_STRINGIFY

/* The prefix to use as fallback */
#cmakedefine KDEDIR "@KDEDIR@"

/* what C++ computer were used for compilation */
#cmakedefine KDE_COMPILER_VERSION "@CMAKE_CXX_COMPILER_VERSION@"

#cmakedefine KDE2_CA_CERT_PATH "@KDE2_CA_CERT_PATH@"

/* what OS used for compilation */
#cmakedefine KDE_COMPILING_OS "@CMAKE_HOST_SYSTEM_NAME@"

/* Distribution Text to append to OS */
#cmakedefine KDE_DISTRIBUTION_TEXT "@KDE_DISTRIBUTION_TEXT@"

/* Lookup mode for IPv6 addresses: 0 for always, 1 for check and 2 for
   disabled */
#cmakedefine KDE_IPV6_LOOKUP_MODE

/* Define the file for mount entries */
#cmakedefine MTAB_FILE

/* Define if the libbz2 functions need the BZ2_ prefix */
#cmakedefine NEED_BZ2_PREFIX

/* Name of package */
#cmakedefine PACKAGE

/* Define if you have POSIX.1b scheduling */
#cmakedefine POSIX1B_SCHEDULING

/* The size of a `char', as computed by sizeof. */
#cmakedefine SIZEOF_CHAR

/* The size of a `char *', as computed by sizeof. */
#cmakedefine SIZEOF_CHAR_P

/* The size of a `int', as computed by sizeof. */
#cmakedefine SIZEOF_INT

/* The size of a `long', as computed by sizeof. */
#cmakedefine SIZEOF_LONG

/* If using the C implementation of alloca, define if you know the
   direction of stack growth for your system; otherwise it will be
   automatically deduced at run-time.
        STACK_DIRECTION > 0 => grows toward higher addresses
        STACK_DIRECTION < 0 => grows toward lower addresses
        STACK_DIRECTION = 0 => direction of growth unknown */
#cmakedefine STACK_DIRECTION

/* Define if you have the ANSI C header files. */
#cmakedefine STDC_HEADERS

/* Define if you can safely include both <sys/time.h> and <time.h>. */
#cmakedefine TIME_WITH_SYS_TIME

/* Version number of package */
#cmakedefine VERSION

/* Define if using the dmalloc debugging malloc package */
#cmakedefine WITH_DMALLOC

/* Define if your processor stores words with the most significant byte first
   (like Motorola and SPARC, unlike Intel and VAX). */
#cmakedefine WORDS_BIGENDIAN

/* where rgb.txt is in */
#cmakedefine X11_RGBFILE

/* Defines the executable of xmllint */
#cmakedefine XMLLINT

/* Define if you need to use the GNU extensions */
#cmakedefine _GNU_SOURCE

/* KDE bindir */
#cmakedefine __KDE_BINDIR

/* path to su */
#cmakedefine __PATH_SU

/* Compatibility define */
#cmakedefine ksize_t

/* Define to `long' if <sys/types.h> does not define. */
#cmakedefine off_t

/* Define to `int' if <sys/types.h> does not define. */
#cmakedefine pid_t

/* Define to `unsigned' if <sys/types.h> does not define. */
#cmakedefine size_t

/* Define the real type of socklen_t */
#cmakedefine socklen_t

/* Define as `fork' if `vfork' does not work. */
#cmakedefine vfork
/* this is included everywhere anyway (mostly indirecty)
   and we need it for socklen_t being always available */
#include <sys/types.h>

/* provide a definition for a 32 bit entity, usable as a typedef, possibly
   extended by "unsigned" */
#cmakedefine INT32_BASETYPE
#ifdef SIZEOF_INT
#if SIZEOF_INT == 4
#define INT32_BASETYPE int
#endif
#endif
#if !defined(INT32_BASETYPE) && defined(SIZEOF_LONG)
#if SIZEOF_LONG == 4
#define INT32_BASETYPE long
#endif
#endif
#ifndef INT32_BASETYPE
#define INT32_BASETYPE int
#endif

/* this is needed for Solaris and others */
#ifndef HAVE_GETDOMAINNAME_PROTO
#define HAVE_GETDOMAINNAME_PROTO
#ifdef __cplusplus
extern "C"
#endif
int getdomainname (char *Name, int Namelen);
#endif  

#ifndef HAVE_GETHOSTNAME_PROTO
#define HAVE_GETHOSTNAME_PROTO
#ifdef __cplusplus  
extern "C" 
#endif
int gethostname (char *Name, int Namelen);
#endif  

/*
 * jpeg.h needs HAVE_BOOLEAN, when the system uses boolean in system
 * headers and I'm too lazy to write a configure test as long as only
 * unixware is related
 */
#ifdef _UNIXWARE
#define HAVE_BOOLEAN
#endif

/* random() returns a value between 0 and RANDOM_MAX.
 * RANDOM_MAX is needed to generate good random numbers. (Nicolas)
 */
#ifndef HAVE_RANDOM
#define HAVE_RANDOM
#define RANDOM_MAX 2^31 
#ifdef __cplusplus  
extern "C" 
#endif
long int random(void); /* defined in fakes.c */
#ifdef __cplusplus  
extern "C" 
#endif
void srandom(unsigned int seed);
#else
/* normal random() */
#define RANDOM_MAX RAND_MAX 
#endif

#ifndef HAVE_SETEUID
#define HAVE_SETEUID
#define HAVE_SETEUID_FAKE
#ifdef __cplusplus
extern "C"
#endif
int seteuid(INT32_BASETYPE euid); /* defined in fakes.c */
#endif

#ifndef HAVE_S_ISSOCK
#define HAVE_S_ISSOCK
#define S_ISSOCK(mode) (1==0)
#endif

/* this is for Tru64 Unix (alias OSF, alias Digital Unix) */

#ifdef __osf__
#if !defined(__STDC__) || !__STDC__
#define __STDC__  1
#endif
#define SOL_TCP 6
typedef unsigned int   u_int32_t;
typedef unsigned char  uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int   uint32_t;
#include <stdarg.h>          /* va_start and the like */
#define RTLD_GLOBAL 0        /* dlopen flag not known under Tru64  */
#ifndef HAVE_USLEEP          /* usleep not defined in Tru64        */
#ifdef __cplusplus  
extern "C" void usleep(unsigned int);
#else
void usleep(unsigned int);
#endif
#endif
#ifdef __cplusplus  
extern "C" {
#endif
#include <sys/mount.h>
int getmntinfo(struct statfs **mntbufp, int flags);
#include <sys/fs_types.h>    /* for mnt_names[] */
#ifdef __cplusplus
}
#endif
#endif

/*
 * On HP-UX, the declaration of vsnprintf() is needed every time !
 */
 
#if !defined(HAVE_VSNPRINTF) || defined(hpux)
#if __STDC__
#include <stdarg.h>
#include <stdlib.h>
#else
#include <varargs.h>
#endif
#ifdef __cplusplus
extern "C"
#endif
int vsnprintf(char *str, size_t n, char const *fmt, va_list ap);
#ifdef __cplusplus  
extern "C" 
#endif
int snprintf(char *str, size_t n, char const *fmt, ...);
#endif

/* Bloody HP-UX (10.20) headers don't define all the res_xxx functions,
   although they are there.  */
#if defined(hpux) && defined(HAVE_RES_INIT)
#ifdef __cplusplus
extern "C"
#endif
void res_init (void);
#endif

#if !defined(HAVE_SETENV)
#ifdef __cplusplus  
extern "C" 
#endif
int setenv(const char *name, const char *value, int overwrite);
#endif

#if !defined(HAVE_UNSETENV)
#ifdef __cplusplus  
extern "C" 
#endif
int unsetenv(const char *name);
#endif

#if !defined(HAVE_MKSTEMPS)
#ifdef __cplusplus  
extern "C" 
#endif
int mkstemps (char* _template, int suffix_len); /* defined in fakes.c */
#endif


#if !defined(HAVE_MKSTEMP)
#define HAVE_MKSTEMP
#ifdef __cplusplus
extern "C"
#endif
int mkstemp (char* _template); /* defined in fakes.c */
#endif

/*
 * AIX defines FD_SET in terms of bzero, but fails to include <strings.h>
 * that defines bzero. 
 */

#if defined(_AIX)
#include <strings.h>
#endif

/*
 * AIX prior to 4.3.3ml8 fails to provide a declaration for initgroups()
 */
#if defined(HAVE_INITGROUPS) && !defined(HAVE_INITGROUPS_PROTO)
#include <grp.h>
#ifdef __cplusplus
extern "C"
#endif
int initgroups(char *, gid_t);  /* missing declaration in AIX < 5.1 */
#endif

/*
 * Steven Schultz <sms@to.gd-es.com> tells us :
 * BSD/OS 4.2 doesn't have a prototype for openpty in its system header files
 */
#ifdef __bsdi__
__BEGIN_DECLS
int openpty(int *, int *, char *, struct termios *, struct winsize *);
__END_DECLS
#endif

