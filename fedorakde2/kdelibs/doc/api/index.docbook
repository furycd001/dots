<?xml version="1.0" ?>
<!DOCTYPE book PUBLIC "-//KDE//DTD DocBook XML V4.1-Based Variant V1.0//EN" "dtd/kdex.dtd" [
<!ENTITY % inst SYSTEM "install-dep.entities">
%inst;
]>

<book lang="&language;">
      
<bookinfo>
<title>KDE Library Reference</title>
<!-- Make jade happy with all required tags... -->
<authorgroup>
<author>
<firstname>Bernd</firstname><surname>Gehrmann</surname>
<affiliation><address><email>bernd@physik.hu-berlin.de</email></address></affiliation>
</author> 
<!-- TRANS:ROLES_OF_TRANSLATORS -->
</authorgroup>
<date>2000-06-08</date>
<releaseinfo>0.00.01</releaseinfo>
<abstract><para>The ultimate KDE Library Reference (just kidding :-)</para></abstract>
<keywordset><keyword>KDE</keyword></keywordset>
</bookinfo>
 
   <chapter id="libraries">
      <title>Libraries in the kdelibs package</title>
      <para>
         The kdelibs package consists of the following libraries:
      </para>
      <para>
         The <ulink url="kdecore/index.html">kdecore</ulink> library is the basic
         application framework for every KDE based program. It provides access to the
         configuration system, command line handling, icon loading and manipulation,
         some special kinds inter-process communication, file handling and various
         other utilities.
      </para>
      <para>
         The <ulink url="kdeui/index.html">kdeui</ulink> library provides many
         widgets and standard dialogs which Qt doesn't have or which have more
         features than their Qt counterparts. It also includes several widgets which
         are subclassed from Qt ones and are better integrated with the KDE desktop
         by respecting user preferences.
      </para>
      <para>
         The <ulink url="kparts/index.html">kparts</ulink> library forms
         the foundation for KDE's embedded components model.
      </para>
      <para>
         The <ulink url="kio/index.html">kio</ulink> contains facilities for
         asynchronous I/O and access to mimetype handling. 
      </para>
      <para>
         The <ulink url="kfile/index.html">kfile</ulink> library contains the KDE
         file dialog and its helper classes.
      </para>
      <para>
         The <ulink url="khtml/index.html">khtml</ulink> library contains the KHTML
         part, a HTML browsing widget and parser, including interfaces to Java.
      </para>
      <para>
         The <ulink url="kjs/index.html">kjs</ulink> library provides an
         implementation of JavaScript.
      </para>
   </chapter>


   <chapter id="overview">
      <title>Overview</title>


      <sect1 id="i18n-overview">
         <title>Internationalizing applications</title>
         <para>
            An important goal of KDE is to make applications usable by people in many
            countries. Internationalization (often abbreviated as
            <abbrev>i18n</abbrev>, which stands for &quot;I&quot;, then eighteen
            letters, then &quot;n&quot;) comprises preparation for the translation of
            labels and messages appearing in the user interface, support for input,
            output and string manipulation in various character sets, support for
            different date, time and currency formats. In the end, a program
            should be able to run <emphasis>unmodified</emphasis>in any linguistic 
            environment with any set of cultural conventions.
         </para>

         <para>
            Thanks to their foundation Qt 2.x, KDE programs by default use the
            powerful <classname>QString</classname> class for all user-visible
            strings. As <classname>QString</classname> uses Unicode internally, in
            most cases you do not have to worry about unusual charsets. Whereever you
            have to use a local encoding (e. g. for filenames), Qt provides the
            <classname>QTextCodec</classname> class for conversion.
         </para>

         <para>
            In the following we discuss how you prepare a program for the translation
            of its user interface. If you are a programmer of an application in the
            KDE CVS, you have luck, and you only have to care for marking all
            translatable strings. The translation itself will be taken care of by an
            army of diligent daemons known as the KDE Translation Team. If you are
            maintaining an application yourself, you have to take a look at these
            issues involved from the translator's point of view as well.
         </para>

         <sect2 id="i18n-programmer">
	 <title>From the programmer's point of view</title>

         <para>
            KDE programs normally use a translation system based on a modified form
            of the gettext package which is part of glibc on Linux systems. Although
            this is not mandatory, it is recommended because it is very easy to use
            for the programmer and it is <emphasis>the</emphasis> standard for open
            source projects. If you take care of enclosing all translatable strings
            in the source code with a call to <function>i18n()</function> (and
            include the header file <filename>klocale.h</filename>), you are almost
            done. For example, in order to construct a label within a dialog, write:
         </para>

         <para>
            <programlisting>
#include &lt;klocale.h&gt;
...
QLabel *lbl = new QLabel(i18n("File name:"), this);
            </programlisting>
         </para>

         <para>
            The <function>i18n()</function> function has two aspects: The first is,
            it takes an argument of type <type>const char *</type>, looks it up in
            its dictionary - according to the user's preferred language, as set in
            the control center - and returns a <classname>QString</classname> with
            the translation. As a technical sidenote, note that the lookup is in fact
            very fast, and its memory usage is optimized by mapping a binary
            translation file directly into memory. Also, as the result of the
            function is an implicitly shared <classname>QString</classname> object,
            you do not have to worry about superfluous deep copies of the string.
         </para>
         <para>
            The other aspect of this function is that is marks the strings to be
            translated in the source code, so they can be automatically extracted
            with the program <application>xgettext</application>. In order to use it,
            put this rule into the <filename>Makefile.am</filename> of your
            <application>foo</application> package:
         </para>

         <para>
            <programlisting>
messages:
	$(XGETTEXT) -C -ki18n -x $(kde_includes)/kde.pot -o $(podir)/foo.pot $(foo_SOURCES)
            </programlisting>
         </para>

         <para>
            Executing this make file target will result in a file
            <filename>foo.pot</filename>, usually in the directory
            <filename>po</filename> unter the toplevel directory of your package.
            This file will have entries like the following:
         </para>

         <para>
            <programlisting>
#: foo.cpp:3 
msgid "File name:" 
msgstr ""
            </programlisting>
         </para>

         <para>
            Often you want to display a string which contains some elements which are
            only known at runtime. The naive approach of internationalizing it could
            look like:
         </para>

         <para>
            <programlisting>
QString filename;
...
filename = ... // get a file name from the user or from somewhere else
if (!QFileInfo(filename).exists()) {
    QMessageBox::information(this, "Foo", i18n("File ") + filename + i18n(" does not exist.));
}
            </programlisting>
         </para>

         <para>
            Do not produce word puzzles like this! It makes the translator's life
            unnecessarily hard. It is better to use phrases which make sense for
            themselves and substitute the variable element with the
            <function>arg()</function> method of <classname>QString</classname>:
         </para>

         <para>
            <programlisting>
QString filename;
...
filename = ... // get a file name from the user or from somewhere else
if (!QFileInfo(filename).exists()) {
    QMessageBox::information(this, "Foo", i18n("File &percnt;1 does not exist.").arg(filename));
}
            </programlisting>
         </para>

         <para>
            The method <function>arg()</function> takes substrings of the form
            &quot;&percnt;n&quot;, where <replaceable>n</replaceable> is a number between 0
            and 9, and replaces the one with the lowest number with its argument. For
            convenience, this method is overloaded for integers and floats, so in
            contrast to c-like functions like <function>sprintf()</function>, it is
            typesafe. It also has the important advantage that when you have several
            insertions in a string, the translator has the freedom the change their
            order. For example, consider the english phrase <blockquote><para>Printed
            &percnt;1 pages of &percnt;2 total.</para></blockquote> A german translator could now
            use as a translation <blockquote><para>Von insgesamt &percnt;2 Seiten wurden &percnt;1
            gedruckt.</para></blockquote>
         </para>

         <para>
            Sometimes, it turns out that a word which must be translated is ambigous,
            i.e. it has several meanings in the original (which is normally
            english). For example, you may have a button with the label
            &quot;Set&quot; on it. One possible meaning is &quot;A set of
            elements&quot; which a german translator would substitute with
            &quot;Menge&quot;. Another meaning is &quot;Set an option&quot; which a
            german translator would substitute with &quot;Setzen&quot;. Obviously,
            the <function>i18n()</function> described above can not provide different
            results for the same phrase in different contexts. A way around this is
            an overloaded two-argument version of this function. The second argument
            is the untranslated string, which is used for english users. The first
            argument only serves the purpose of distinguishing different meanings of
            the untranslated string. In the above example, you can use 
            <blockquote><para>
               i18n("A set of", "Set")
            </para></blockquote>
            for one occurance of &quot;Set&quot; and 
            <blockquote><para>
               i18n("to set", "Set")
            </para></blockquote>
            for the other one.
         </para>

         </sect2>

         <sect2 id="i18n-translator">
	 <title>From the translator's point of view</title>

         <para>
         </para>

	 </sect2>

      </sect1>


      <sect1 id="xml-overview">
         <title>Usage of XML in KDE</title> 
         <para>
            Blubber blubber zisch - Motivation...
            <ulink url="http://www.w3.org/XML/1999/XML-in-10-points">XML in 10 points</ulink>
         </para>


         <sect2 id="xml-format">
	 <title>What XML looks like</title>

         <para>
            Here is an example of an XML file used
            by <application>Columbo</application> to describe a search site on the
            Internet:
         </para>
         <para>
            <programlistingco>
               <areaspec>
                  <area id="xml.doctype" coords="1"/>
                  <area id="xml.rootel" coords="2"/>
                  <area id="xml.nestedel" coords="9"/>
               </areaspec>
               <programlisting>
<![CDATA[<!DOCTYPE search>
<search 
   name="Altavista" 
   channel="web"
   method="get"
   action="http://www.altavista.com/cgi-bin/query"
>

   <input name="pg" value="q"/>
   <input name="sc" value="on"/>
   <input name="hl" value="on"/>
   <input name="kl" value="XX"/>
   <input name="stype" value="stext"/>
   <input name="q" user="true"/>

   <interpret
      resultListStart="&lt;dl&gt;"
      resultItemStart="&lt;dt&gt;"
      relevanceStart=""
      resultListEnd="&lt;/td&gt;"
      resultItemEnd="&lt;/dl&gt;"
      relevanceEnd=""
   />

</search>]]>
               </programlisting>
               <calloutlist>
                  <callout arearefs="xml.doctype">
                     <para>
                        This instruction is normally used to declare the DTD of the
                        document. Here no DTD is used, and only the name of the root
                        element (<varname>search</varname>) appears.
                     </para>
                  </callout>
                  <callout arearefs="xml.rootel">
                     <para>
                        <sgmltag class="starttag">search</sgmltag> begins the root
                        element. Here, it extends to the end of the document
                        (<sgmltag class="endtag">search</sgmltag>).
                     </para>
                  </callout>
                  <callout arearefs="xml.nestedel">
                     <para>
                        This is an example of an empty element. Empty elements do not
                        need a closing tag (which would be
                        <varname>&lt;/input&gt;</varname> in this case).
                     </para>
                  </callout>
               </calloutlist>
            </programlistingco>
         </para>
         
         </sect2>
         
         <sect2 id="xml-domapi">
	 <title>Accessing XML files via the QDom API</title>

         <para>
            Now let us have a look how such a file is parsed. The easiest way is
            to create a <classname>QDomDocument</classname>. With its constructor
            <function>QDomDocument(const QString&amp; name)</function>, the filename
            with the name <varname>name</varname> will be completely parsed, and
            you can navigate on the file content as a tree structure. As a
            first step, we check if the file has the correct document type:
         </para>
         <para>
            <programlisting>
QDomDocument doc(filename);
if (doc.doctype().name() != "search") {
    cout &lt;&lt; "Not the correct document type." &lt;&lt; endl;
    return;
}
            </programlisting>
         </para>
         <para>
            The root element (which is an instance of the class
            <classname>QDomElement</classname>) is available via the method
            <function>QDomDocument::documentElement()</function>. The attributes
            of the element can be asked for with the method
            <function>QDomElement::attribute()</function>, which returns a
            <classname>QString</classname>. We output the &quot;name&quot; and
            &quot;method&quot; attributes, which in the file in the above example
            are &quot;Altavista&quot;, &quot;get&quot; resp.:
         </para>
         <para>
            <programlisting>
QDomElement docel = doc.documentElement();
cout &lt;&lt; "Name:   " &lt;&lt; docel.attribute("name").latin1() &lt;&lt; endl;
cout &lt;&lt; "Method: " &lt;&lt; docel.attribute("method").latin1() &lt;&lt; endl;
            </programlisting>
         </para>
         <para>
            The root element has some <sgmltag class="starttag">input</sgmltag>
            children. In order to process all of them, you can iterate over them
            with a code piece like the following:
         </para>
         <para>
            <programlisting>
QDomElement childel = docel.firstChild().toElement()
while (!childel.isNull()) {
    if (childel.tagName() == "input") {
        // do something with element childel
    }
    childel = childel.nextSibling().toElement();
}
            </programlisting>
         </para>
         <para>
            The use of the <function>toElement()</function> method is necessary
            because <function>QDomElement::firstChild()</function> returns an
            object of class <classname>QDomNode</classname>, which has to be
            converted to an element first. 
         </para>
         <para>
            In some cases, you do not want to iterate over the children of an
            element, but access a child with a certain tag name
            directly. Continuing with the above example, this can be achieved as follows:
         </para>
         <para>
            <programlisting>
               QDomElement interpretel = docel.namedItem("interpret").toElement();
               if (!interpret.isNull()) {
               // do something with interpretel
               }
            </programlisting>
         </para>
         
	 </sect2>

      </sect1>

   </chapter>


   <chapter id="structure">
      <title>Structure Overview</title>
      <para>
         The classes in the libraries can be classified as follows:
         <itemizedlist>
            <listitem>
               <para>
                  <link linkend="applicationskeleton">Core application skeleton</link> 
                  - classes needed by almost every application.
               </para>
            </listitem>
            <listitem>
               <para>
                  <link linkend="configurationsettings">Configuration settings</link>
                  - classes to access KDE's hierarchical configuration
                  database, global settings and application resources.
               </para>
            </listitem>
            <listitem>
               <para>
                  <link linkend="keyboardaccelerators">Keyboard accelerators and shortcuts</link> 
                  - classes helping to establish consistent
                  key bindings throughout the desktop.
               </para>
            </listitem>
            <listitem>
               <para>
                  <link linkend="filehandling">File and URL handling</link>
                  - temporary files, decoding or URLs, icon loading and manipulating.
               </para>
            </listitem>
            <listitem>
               <para>
                  <link linkend="imageprocessing">Image processing</link> 
                  - icon loading and manipulating.
               </para>
            </listitem>
            <listitem>
               <para>
                  <link linkend="interprocess">Interprocess communication</link>
                  - subprocesses, DCOP helper classes .
               </para>
            </listitem>
            <listitem>
               <para>
                  <link linkend="utilityclasses">Utility classes</link> 
                  - memory management, random numbers, regular expressions, 
                  string manipulation, char sets, etc.
               </para>
            </listitem>
            <listitem>
               <para>
                  <link linkend="widgets">Widgets</link>
                  - widgets classes for list views, rulers, color selection, ...
               </para>
            </listitem>
            <listitem>
               <para>
                  <link linkend="dialogs">Dialogs</link>
                  - full-featured dialogs for file, color and font selection
               </para>
            </listitem>
         </itemizedlist>
      </para>

      
      <sect1 id="applicationskeleton">
         <title>The core application skeleton</title>
	 <para>
	    <variablelist>
	       <varlistentry>
		  <term><ulink url="kdecore/KApplication.html">KApplication</ulink></term>
		  <listitem>
		     <para>
			Initializes and controls a KDE application.
		     </para>
		  </listitem>
	       </varlistentry>
	       <varlistentry>
                  <term><ulink url="kdecore/KUniqueApplication.html">KUniqueApplication</ulink></term> 
                  <listitem>
		     <para>
                        Makes sure that only one instance of an application can run
                        simultaneously.
		     </para>
		  </listitem>
	       </varlistentry>
	       <varlistentry>
		  <term><ulink url="kdecore/KAboutData.html">KAboutData</ulink></term>
		  <listitem>
		     <para>
			Holds information for the about box.
		     </para>
		  </listitem>
	       </varlistentry>
	    </variablelist>
	 </para>
      </sect1>

      <sect1 id="configurationsettings">
         <title>Configuration settings</title>
         <para>
	    <variablelist>
	       <varlistentry>
		  <term><ulink url="kdecore/KConfig.html">KConfig</ulink></term>
		  <listitem>
		     <para>
			Provides access to KDE's configuration database.
		     </para>
		  </listitem>
	       </varlistentry>
	       <varlistentry>
		  <term><ulink url="kdecore/KConfigBase.html">KConfigBase</ulink></term>
		  <listitem>
		     <para>
			Abstract base class for configuration file access.
		     </para>
		  </listitem>
	       </varlistentry>
	       <varlistentry>
		  <term><ulink url="kdecore/KSimpleConfig.html">KSimpleConfig</ulink></term>
		  <listitem>
		     <para>
			Access to simple, non-hierarchical configuration files.
		     </para>
		  </listitem>
	       </varlistentry>
	       <varlistentry>
		  <term><ulink url="kdecore/KDesktopFile.html">KDesktopFile</ulink></term>
		  <listitem>
		     <para>
			Access to <filename>.desktop</filename> files.
		     </para>
		  </listitem>
	       </varlistentry>
	       <varlistentry>
		  <term><ulink url="kdecore/KGlobalSettings.html">KGlobalSettings</ulink></term>
		  <listitem>
		     <para>
			Provides convenient access to general settings.
		     </para>
		  </listitem>
	       </varlistentry>
	    </variablelist>
         </para>
      </sect1>

      
      <sect1 id="keyboardaccelerators">
         <title>Keyboard accelerators and shortcuts</title>
         <para>
            <variablelist>
               <varlistentry>
                  <term>KAccel</term>
                  <listitem><para>Collection of keyboard shortcuts.</para></listitem>
               </varlistentry>
               <varlistentry>
                  <term>KStdAccel</term>
                  <listitem><para>Easy access to the common keyboard shortcut keys.</para></listitem>
               </varlistentry>
               <varlistentry>
                  <term>KGlobalAccel</term>
                  <listitem><para>Collection of system-wide keyboard shortcuts.</para></listitem>
               </varlistentry>
            </variablelist>
         </para>
      </sect1>
      

      <sect1 id="filehandling">
         <title>File and URL handling</title>
         <para>
            <variablelist>
               <varlistentry>
                  <term><ulink url="kdecore/KTempFile.html">KTempFile</ulink></term>
                  <listitem><para>Creates unique files for temporary data.</para></listitem>
               </varlistentry>
               <varlistentry>
                  <term><ulink url="kdecore/KSaveFile.html">KSaveFile</ulink></term>
                  <listitem><para>Allows to save files atomically.</para></listitem>
               </varlistentry>
               <varlistentry>
                  <term><ulink url="kdecore/KURL.html">KURL</ulink></term>
                  <listitem><para>Represents and parses URLs.</para></listitem>
               </varlistentry>
               <varlistentry>
                  <term><ulink url="kdecore/KProtocolHandler">KProtocolHandler</ulink></term>
                  <listitem><para>Holds information about IO protocols.</para></listitem>
               </varlistentry>
            </variablelist>
         </para>
      </sect1>


      <sect1 id="imageprocessing">
         <title>Image processing</title>
            <para>
            <variablelist>
               <varlistentry>
                  <term><ulink url="kdecore/KPixmap.html">KPixmap</ulink></term>
                  <listitem><para>A pixmap class with extended dithering capabilities.</para></listitem>
               </varlistentry>
               <varlistentry>
                  <term><ulink url="kdecore/KPixmapEffect.html">KPixmapEffect</ulink></term>
                  <listitem><para>Pixmap effects like gradients and patterns.</para></listitem>
               </varlistentry>
               <varlistentry>
                  <term><ulink url="kdecore/KIconLoader.html">KIconLoader</ulink></term>
                  <listitem><para>Loads icons in a theme-conforming way.</para></listitem>
               </varlistentry>
               <varlistentry>
                  <term><ulink url="kdecore/KIconTheme.html">KIconTheme</ulink></term>
                  <listitem><para>Helper class for KIconLoader.</para></listitem>
               </varlistentry>
            </variablelist>
            </para>
      </sect1>


      <sect1 id="interprocess">
         <title>Interprocess communication</title>
            <para>
            <variablelist>
               <varlistentry>
                  <term><ulink url="kdecore/KProcess.html">KProcess</ulink></term>
                  <listitem><para>Invokes and controls child processes.</para></listitem>
               </varlistentry>
               <varlistentry>
                  <term><ulink url="kdecore/KShellProcess.html">KShellProcess</ulink></term>
                  <listitem><para>Invokes child processes via a shell.</para></listitem>
               </varlistentry>
               <varlistentry>
                  <term><ulink url="kdecore/KIPC.html">KIPC</ulink></term>
                  <listitem><para>Simple IPC mechanism using X11 ClientMessages.</para></listitem>
               </varlistentry>
               <varlistentry>
                  <term><ulink url="kdecore/KDCOPPropertyProxy.html">KDCOPPropertyProxy</ulink></term>
                  <listitem><para>A proxy class publishing Qt properties through DCOP.</para></listitem>
               </varlistentry>
               <varlistentry>
                  <term><ulink url="kdeui/KDCOPActionProxy.html">KDCOPActionProxy</ulink></term>
                  <listitem><para>A proxy class publishing a DCOP interface for actions.</para></listitem>
               </varlistentry>
            </variablelist>
         </para>
      </sect1>
      
      <sect1 id="utilityclasses">
         <title>Utility classes</title>
         <para>
            <variablelist>
               <varlistentry>
                  <term><ulink url="kdecore/KRegExp.html">KRegExp</ulink></term>
                  <listitem><para>POSIX regular expression maching.</para></listitem>
               </varlistentry>
               <varlistentry>
                  <term><ulink url="kdecore/KStringHandler.html">KStringHandler</ulink></term>
                  <listitem><para>An extravagant interface for string manipulation.</para></listitem>
               </varlistentry>
               <varlistentry>
                  <term><ulink url="kdecore/KCompletion.html">KCompletion</ulink></term>
                  <listitem><para>A generic class for completing strings.</para></listitem>
               </varlistentry>
               <varlistentry>
                  <term><ulink url="kdecore/KZoneAllocator.html">KZoneAllocator</ulink></term>
                  <listitem><para>Efficient memory allocator for large groups of small objects.</para></listitem>
               </varlistentry>
               <varlistentry>
                  <term><ulink url="kdecore/KRandomSequence.html">KRandomSequence</ulink></term>
                  <listitem><para>Pseudo random number generator.</para></listitem>
               </varlistentry>
            </variablelist>
            </para>
      </sect1>


      <sect1 id="widgets">
         <title>Widgets</title>
         <para>
            <variablelist>
               <varlistentry>
                  <term><ulink url="kdeui/KListView.html">KListView</ulink></term>
                  <listitem><para>A variant of QListView that honors KDE's system-wide settings.</para></listitem>
               </varlistentry>
               <varlistentry>
                  <term><ulink url="kdeui/KListBox.html">KListBox</ulink></term>
                  <listitem><para>A variant of KListBox that honors KDE's system-wide settings.</para></listitem>
               </varlistentry>
               <varlistentry>
                  <term><ulink url="kdeui/KIconView.html">KIconView</ulink></term>
                  <listitem><para>A variant of QIconView that honors KDE's system-wide settings.</para></listitem>
               </varlistentry>
               <varlistentry>
                  <term><ulink url="kdeui/KRuler.html">KRuler</ulink></term>
                  <listitem><para>A ruler widget.</para></listitem>
               </varlistentry>
            </variablelist>
         </para>
      </sect1>


      <sect1 id="dialogs">
         <title>Dialogs</title>
         <para>
            <variablelist>
               <varlistentry>
                  <term><ulink url="kdeui/KFileDialog.html">KFileDialog</ulink></term>
                  <listitem><para>A file selection dialog.</para></listitem>
               </varlistentry>
               <varlistentry>
                  <term><ulink url="kdeui/KColorDialog.html">KColorDialog</ulink></term>
                  <listitem><para>A color selection dialog.</para></listitem>
               </varlistentry>
               <varlistentry>
                  <term><ulink url="kdeui/KFontDialog.html">KFontDialog</ulink></term>
                  <listitem><para>A font selection dialog.</para></listitem>
               </varlistentry>
            </variablelist>
         </para>
      </sect1>

   </chapter>   


   <chapter id="screenshots">
      <title>Screenshots</title>
      <para>
         The <ulink url="kfile/KFileDialog.html">KFileDialog</ulink>:
         <screenshot><mediaobject><imageobject>
            <imagedata fileref="kfile/kfiledialog.png" format="PNG"/>
         </imageobject></mediaobject></screenshot>
      </para>
      <para>
         The <ulink url="kfile/KColorDialog.html">KColorDialog</ulink>:
         <screenshot><mediaobject><imageobject>
            <imagedata fileref="kdeui/kcolordialog.png" format="PNG"/>
         </imageobject></mediaobject></screenshot>
      </para>
      <para>
         The <ulink url="kfile/KFontDialog.html">KFontDialog</ulink>:
         <screenshot><mediaobject><imageobject>
            <imagedata fileref="kdeui/kfontdialog.png" format="PNG"/>
         </imageobject></mediaobject></screenshot>
      </para>
      <para>
         The <ulink url="kfile/KEditToolbar.html">KEditToolbar</ulink>:
         <screenshot><mediaobject><imageobject>
            <imagedata fileref="kdeui/kedittoolbar.png" format="PNG"/>
         </imageobject></mediaobject></screenshot>
      </para>
      <para>
         The <ulink url="kfile/KKeyDialog.html">KKeyDialog</ulink>:
         <screenshot><mediaobject><imageobject>
            <imagedata fileref="kdeui/kkeydialog.png" format="PNG"/>
         </imageobject></mediaobject></screenshot>
      </para>
      <para>
         The <ulink url="&QTDOCDIR;/qcolordialog.html">QPrintDialog</ulink>:
         <screenshot><mediaobject><imageobject>
            <imagedata fileref="&QTDOCDIR;/qprintdlg-m.png" format="PNG"/>
         </imageobject></mediaobject></screenshot>
      </para>
      <para>
         ...
      </para>
   </chapter>


   <chapter id="standards">
      <title>Standards</title>
      <para>
         <variablelist>
            <varlistentry>
               <term><ulink url="http://www.w3.org/XML/">XML</ulink></term>
               <listitem>
                  <para>
                     The Extensible Markup language. KOffice's document formats are
                     applications of this. It is also used as configuration file
                     format by an increasing number of KDE programs.
                  </para>
               </listitem>
            </varlistentry>
            <varlistentry>
               <term><ulink url="http://www.w3.org/DOM/">DOM</ulink></term>
               <listitem>
                  <para>
                     The Document Object Model as defined by the
                     W3C. Qt's <classname>QDom*</classname> classes are
                     modeled after this.
                  </para>
               </listitem>
            </varlistentry>
            <varlistentry>
               <term><ulink url="http://www.cco.newplanetsoftware.com/xdnd/">XDND</ulink></term>
               <listitem>
                  <para>
                     The specification for the inter-application drag and drop
                     protocol used by Qt and Gtk. Meanwhile, several other applications use it.
                  </para>
               </listitem>
            </varlistentry>
            <varlistentry>
               <term><ulink url="http://www.freedesktop.org/standards/wm-spec.html">wm-spec</ulink></term>
               <listitem>
                  <para>
                     The protocol for window manager interaction, supported by many
                     window manager authors.
                  </para>
               </listitem>
            </varlistentry>
            <varlistentry>
               <term><ulink url="kio/DESKTOP_ENTRY_STANDARD">Desktop Entry Standard</ulink></term>
               <listitem>
                  <para>
                     The format of <filename>.desktop</filename> files, supported by KDE and GNOME.
                  </para>
               </listitem>
            </varlistentry>
            <varlistentry>
               <term><ulink url="ftp://ftp.isi.edu/in-notes/iana/assignments/media-types/">MIME types</ulink></term>
               <listitem>
                  <para>
                     List of registered content types.
                  </para>
               </listitem>
            </varlistentry>
            <varlistentry>
               <term><ulink url="http://www.ietf.org/rfc/rfc1738.txt">URL</ulink></term>
               <listitem>
               <para>
                  Uniform resource locators, defined by RFC 1738.
               </para>
</listitem>
            </varlistentry>
            <varlistentry>
               <term><ulink url="ftp://ftp.x.org/pub/R6.4/xc/doc/hardcopy/SM">SM</ulink></term>
               <listitem>
                  <para>
                     The X11R6.4 session management protocol. This is the backend
                     protocol for <classname>KTMainWindow</classname>'s high-level session management
                     features. GNOME also supports this protocol.
                  </para>
               </listitem>
            </varlistentry>
         </variablelist>
      </para>
   </chapter>

</book>
   
   
<!-- 
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:3
sgml-indent-data:t
sgml-parent-document:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
compile-command:"test -d HTML && rm -rf HTML ; kdb2html `pwd`/index.docbook.in"
fill-column:85
End:
-->

