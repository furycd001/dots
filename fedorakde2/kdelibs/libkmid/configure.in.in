dnl libkmid's specific checks

#AC_MSG_CHECKING(if libkmid would compile)
#AC_CACHE_VAL(kde_libkmid_compiles,
#[
#AC_TRY_COMPILE([
##ifndef __FreeBSD__
##include <sys/soundcard.h>
##else
##include <machine/soundcard.h>
##endif
#],
#[
#],
#  kde_libmid_compiles=yes,
#kde_libmid_compiles=no)
#])
#AC_MSG_RESULT($kde_libmid_compiles)
#if test $kde_libmid_compiles = no; then
#  DO_NOT_COMPILE="$DO_NOT_COMPILE libkmid"
#fi

#AC_ARG_ENABLE(alsa, 
#[  --enable-alsa    Turn on alsa support], 
#[case "${enableval}" in 
#yes) alsa=true ;; 
#no)  alsa=false ;; 
#*) AC_MSG_ERROR(bad value ${enableval} for --enable-alsa) ;; 
#esac],[alsa=false]) 

#if test "$arts_with_alsa" = "yes"; then
#AC_DEFUN(AC_CHECK_LIBASOUND,
#[
#  ac_ldflags_save="$LDFLAGS"
#  LDFLAGS="$all_libraries $LDFLAGS"
#  AC_CHECK_HEADER(sys/asoundlib.h,
#  [
#    AC_CHECK_LIB(asound,snd_seq_create_simple_port,[
#      alsa=true
#      LIBASOUND="-lasound"
#      AC_DEFINE(HAVE_LIBASOUND, 1,
#        [Define if you have libasound (required for alsa support)])
#    ], [
#      alsa=false
#    ])
#  ])
#  AC_SUBST(LIBASOUND)
#  LDFLAGS="$ac_ldflags_save"
#])
#AC_CHECK_LIBASOUND

#fi
#AC_SUBST(LIBASOUND)

#AC_MSG_CHECKING([for OSS support])
#AC_CACHE_VAL(ac_cv_header_soundcard_h,
#[
#AC_TRY_COMPILE([
##include <unistd.h>
#],
#[ ],
#ac_cv_header_soundcard_h=yes,
#ac_cv_header_soundcard_h=no)
#])
#AC_MSG_RESULT($ac_cv_header_soundcard_h)
#if eval "test \"`echo $ac_cv_header_soundcard_h`\" = yes"; then
#  AC_DEFINE(HAVE_GETHOSTNAME, 1, [Define if you have getdomainname])
#fi
#CXXFLAGS="$save_CXXFLAGS"
#])



#AM_CONDITIONAL(HAVE_ALSA, test x$alsa = xtrue) 

AC_CHECK_HEADERS(sys/soundcard.h machine/soundcard.h linux/awe_voice.h awe_voice.h /usr/src/sys/i386/isa/sound/awe_voice.h /usr/src/sys/gnu/i386/isa/sound/awe_voice.h)  


