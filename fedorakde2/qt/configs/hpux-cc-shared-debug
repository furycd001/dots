# Compiling
INTERFACE_DECL_PATH 	= .
SYSCONF_CXX		= CC
SYSCONF_CC		= cc
DASHCROSS		= 

# Compiling with support libraries
SYSCONF_CXXFLAGS_X11	= -I/usr/include/X11R6
SYSCONF_CXXFLAGS_QT	= -I$(QTDIR)/include
SYSCONF_CXXFLAGS_OPENGL	= -I/opt/graphics/OpenGL/include -I/usr/contrib/X11R6/include

# Compiling YACC output
SYSCONF_CXXFLAGS_YACC     = 

# Linking with support libraries
SYSCONF_RPATH_X11	= 
SYSCONF_RPATH_QT	= 
SYSCONF_RPATH_OPENGL	= 

# Linking with support libraries
# X11
SYSCONF_LFLAGS_X11	= -L/usr/lib/X11R6
SYSCONF_LIBS_X11	= -lXext -lX11
# Qt, Qt+OpenGL
SYSCONF_LFLAGS_QT	= -L$(QTDIR)/lib
SYSCONF_LIBS_QT		= -lqt$(QT_THREAD_SUFFIX)
SYSCONF_LIBS_QT_OPENGL	= 
# OpenGL
SYSCONF_LFLAGS_OPENGL	= -L/opt/graphics/OpenGL/lib -L/usr/contrib/X11R6/lib
SYSCONF_LIBS_OPENGL	= -lGLU -lGL -lXmu
# Yacc
SYSCONF_LIBS_YACC	= 

# Linking applications
SYSCONF_LINK		= CC
SYSCONF_LFLAGS		= +DA1.1e +DS1.1 -L/usr/lib -I/usr/include/X11R6 -I$(QTDIR)/include
SYSCONF_LIBS		= -lm

# Link flags for shared objects
SYSCONF_LFLAGS_SHOBJ	= -b

# Flags for threading
SYSCONF_CFLAGS_THREAD	= -D_POSIX_C_SOURCE=199506L -D_HPUX_SOURCE
SYSCONF_CXXFLAGS_THREAD	= -D_POSIX_C_SOURCE=199506L -D_HPUX_SOURCE
SYSCONF_LFLAGS_THREAD	= 
SYSCONF_LIBS_THREAD	=  -lpthread

# Meta-object compiler
SYSCONF_MOC		= $(QTDIR)/bin/moc

# UI compiler
SYSCONF_UIC		= $(QTDIR)/bin/uic

# Linking shared libraries
#   - Build the $(TARGET) library, eg. lib$(TARGET).so.2.2.2
#   - Place target in $(DESTDIR) - which has a trailing /
#   - Usually needs to incorporate $(VER_MAJ), $(VER_MIN) and $(VER_PATCH)
#
SYSCONF_LINK_SHLIB	= CC
SYSCONF_LINK_TARGET_SHARED	= lib$(TARGET).$(VER_MAJ)
SYSCONF_LINK_LIB_SHARED	=  $(SYSCONF_LINK_SHLIB) -b -Wl,+h,$(SYSCONF_LINK_TARGET_SHARED) \
				 $(LFLAGS) -o $(SYSCONF_LINK_TARGET_SHARED) \
				 $(OBJECTS) $(OBJMOC) $(LIBS) && \
				 chmod 555 $(SYSCONF_LINK_TARGET_SHARED) && \
				 mv $(SYSCONF_LINK_TARGET_SHARED) $(DESTDIR); \
				 cd $(DESTDIR) && \
				 rm -f lib$(TARGET).sl; \
				 ln -s $(SYSCONF_LINK_TARGET_SHARED) lib$(TARGET).sl

# Linking static libraries
#   - Build the $(TARGET) library, eg. lib$(TARGET).a
#   - Place target in $(DESTDIR) - which has a trailing /
#
SYSCONF_AR		= ar cqs
SYSCONF_LINK_TARGET_STATIC = lib$(TARGET).a
SYSCONF_LINK_LIB_STATIC	= rm -f $(DESTDIR)$(SYSCONF_LINK_TARGET_STATIC) ; \
				 $(SYSCONF_AR) $(DESTDIR)$(SYSCONF_LINK_TARGET_STATIC) $(OBJECTS) $(OBJMOC) 
# Compiling application source
SYSCONF_CXXFLAGS	= +DA1.1e +DS1.1 -w +a1 -g
SYSCONF_CFLAGS		= -Ae +DA1.1e +DS1.1 -w -g
# Default link type (static linking is still be used where required)
SYSCONF_LINK_LIB	= $(SYSCONF_LINK_LIB_SHARED)
SYSCONF_LINK_TARGET	= $(SYSCONF_LINK_TARGET_SHARED)
# Compiling library source
SYSCONF_CXXFLAGS_LIB	= +Z
SYSCONF_CFLAGS_LIB	= +Z
# Compiling shared-object source
SYSCONF_CXXFLAGS_SHOBJ	= +Z
SYSCONF_CFLAGS_SHOBJ	= +Z
# Linking Qt
SYSCONF_LIBS_QTLIB	= $(SYSCONF_LFLAGS_X11) $(QT_LIBS_MT) $(QT_LIBS_OPT)
# Linking Qt applications
SYSCONF_LIBS_QTAPP	= 
