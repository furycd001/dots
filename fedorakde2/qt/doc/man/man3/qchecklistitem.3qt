'\" t
.TH QCheckListItem 3qt "29 October 2001" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2001 Trolltech AS.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QCheckListItem \- Implements checkable list view items
.br
.PP
\fC#include <qlistview.h>\fR
.PP
Inherits QListViewItem.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "enum \fBType\fR { RadioButton, CheckBox, Controller }"
.br
.ti -1c
.BI "\fBQCheckListItem\fR ( QCheckListItem * " "parent" ", const QString & " "text" ", Type = Controller ) "
.br
.ti -1c
.BI "\fBQCheckListItem\fR ( QListViewItem * " "parent" ", const QString & " "text" ", Type = Controller ) "
.br
.ti -1c
.BI "\fBQCheckListItem\fR ( QListView * " "parent" ", const QString & " "text" ", Type = Controller ) "
.br
.ti -1c
.BI "\fBQCheckListItem\fR ( QListViewItem * " "parent" ", const QString & " "text" ", const QPixmap & ) "
.br
.ti -1c
.BI "\fBQCheckListItem\fR ( QListView * " "parent" ", const QString & " "text" ", const QPixmap & ) "
.br
.ti -1c
.BI "\fB~QCheckListItem\fR () "
.br
.ti -1c
.BI "virtual void \fBpaintCell\fR ( QPainter *, const QColorGroup & " "cg" ", int " "column" ", int " "width" ", int alignment ) "
.br
.ti -1c
.BI "virtual void \fBpaintFocus\fR ( QPainter *, const QColorGroup & " "cg" ", const QRect & r ) "
.br
.ti -1c
.BI "virtual void \fBsetup\fR () "
.br
.ti -1c
.BI "virtual void \fBsetOn\fR ( bool ) "
.br
.ti -1c
.BI "bool \fBisOn\fR () const"
.br
.ti -1c
.BI "Type \fBtype\fR () const"
.br
.ti -1c
.BI "QString \fBtext\fR () const"
.br
.ti -1c
.BI "void \fBsetEnabled\fR ( bool b ) "
.br
.ti -1c
.BI "bool \fBisEnabled\fR () const"
.br
.in -1c
.SS "Protected Members"
.in +1c
.ti -1c
.BI "virtual void \fBactivate\fR () "
.br
.ti -1c
.BI "void \fBturnOffChild\fR () "
.br
.ti -1c
.BI "virtual void \fBstateChange\fR ( bool ) "
.br
.in -1c
.SH DESCRIPTION
The QCheckListItem class implements checkable list view items.
.PP
There are three types of check list items: CheckBox, RadioButton and Controller.
.PP
Checkboxes may be inserted at top level in the list view. A radio button must be child of a controller.
.SS "Member Type Documentation"
.SH "QCheckListItem::Type"
This enum type defines the modes in which a QCheckListItem can be: 
.TP
\fCRadioButton\fR -
.TP
\fCCheckBox\fR -
.TP
\fCController\fR -
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QCheckListItem::QCheckListItem ( QListView * parent, const QString & text, Type tt = Controller )"
Constructs a checkable item with parent \fIparent,\fR text \fItext\fR and type \fItt.\fR Note that \fItt\fR must not be RadioButton, if so it will not toggle.
.SH "QCheckListItem::QCheckListItem ( QListView * parent, const QString & text, const QPixmap & p )"
Constructs a Controller item with parent \fIparent,\fR text \fItext\fR and pixmap \fIp.\fR
.SH "QCheckListItem::QCheckListItem ( QListViewItem * parent, const QString & text, Type tt = Controller )"
Constructs a checkable item with parent \fIparent,\fR text \fItext\fR and type \fItt.\fR Note that this item must not be a a RadioButton. Radio buttons must be children on a Controller.
.SH "QCheckListItem::QCheckListItem ( QListViewItem * parent, const QString & text, const QPixmap & p )"
Constructs a Controller item with parent \fIparent,\fR text \fItext\fR and pixmap \fIp.\fR
.SH "QCheckListItem::QCheckListItem ( QCheckListItem * parent, const QString & text, Type tt = Controller )"
Constructs a checkable item with parent \fIparent,\fR text \fItext\fR and type \fItt.\fR Note that a RadioButton must be child of a Controller, otherwise it will not toggle.
.SH "QCheckListItem::~QCheckListItem ()"
Destroys the item, deleting all its children, freeing up all allocated resources.
.SH "void QCheckListItem::activate () \fC[virtual protected]\fR"
Toggle checkbox, or set radio button on.
.PP
Reimplemented from QListViewItem.
.SH "bool QCheckListItem::isEnabled () const"
Retuns whether the item is enabled or disabled.
.PP
See also setEnabled().
.SH "bool QCheckListItem::isOn () const"
Returns TRUE if this item is toggled on, FALSE otherwise.
.SH "void QCheckListItem::paintBranches ( QPainter * p, const QColorGroup & g, int w, int y, int h, GUIStyle s ) \fC[virtual protected]\fR"
Reimplemented for internal reasons; the API is not affected.
.PP
Reimplemented from QListViewItem.
.SH "void QCheckListItem::paintCell ( QPainter * p, const QColorGroup & cg, int column, int width, int align ) \fC[virtual]\fR"
Paints this item.
.PP
Reimplemented from QListViewItem.
.SH "void QCheckListItem::paintFocus ( QPainter * p, const QColorGroup & cg, const QRect & r ) \fC[virtual]\fR"
Draws the focus rectangle.
.SH "void QCheckListItem::setEnabled ( bool b )"
Enables/Disables the item depending on what you pass as \fIb\fR parameter. If the item is disabled, the user can't change the state (see setOn()/isOn()) of the item.
.SH "void QCheckListItem::setOn ( bool b ) \fC[virtual]\fR"
Sets this button on if \fIb\fR is TRUE, off otherwise. Maintains radio button exclusivity.
.SH "void QCheckListItem::setup () \fC[virtual]\fR"
Performs setup.
.PP
Reimplemented from QListViewItem.
.SH "void QCheckListItem::stateChange ( bool ) \fC[virtual protected]\fR"
This virtual function is called when the item changes its on/off state.
.SH "QString QCheckListItem::text () const"
Returns the text of this item.
.SH "QString QCheckListItem::text ( int n ) const \fC[virtual]\fR"
Reimplemented for internal reasons; the API is not affected.
.PP
Reimplemented from QListViewItem.
.SH "void QCheckListItem::turnOffChild () \fC[protected]\fR"
If this is a Controller that has RadioButton children, turn off the child that is on.
.SH "QCheckListItem::Type QCheckListItem::type() const"
Returns the type of this item.
.SH "int QCheckListItem::width ( const QFontMetrics & fm, const QListView * lv, int column ) const \fC[virtual]\fR"
Reimplemented for internal reasons; the API is not affected.
.PP
Reimplemented from QListViewItem.
.SH "SEE ALSO"
.BR http://doc.trolltech.com/qchecklistitem.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2001 Trolltech AS, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports make our job much simpler. Thank you.
.P
In case of content or formattting problems with this manual page, please
report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qchecklistitem.3qt) and the Qt
version (2.3.2).
