'\" t
.TH QCloseEvent 3qt "29 October 2001" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2001 Trolltech AS.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QCloseEvent \- Parameters that describe a close event
.br
.PP
\fC#include <qevent.h>\fR
.PP
Inherits QEvent.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQCloseEvent\fR () "
.br
.ti -1c
.BI "bool \fBisAccepted\fR () const"
.br
.ti -1c
.BI "void \fBaccept\fR () "
.br
.ti -1c
.BI "void \fBignore\fR () "
.br
.in -1c
.SH DESCRIPTION
The QCloseEvent class contains parameters that describe a close event.
.PP
Close events are sent to widgets that the user wants to close, usually by choosing "Close" from the window menu. They are also sent when you call QWidget::close() to close a widget from inside the program.
.PP
Close events contain a special accept flag which tells whether the receiver wants the widget to be closed. When a widget accepts the close event, it is hidden. If it refuses to accept the close event, either nothing happens or it is forcibly closed, if the sender of the close event really wants to.
.PP
The main widget of the application - QApplication::mainWidget() - is a special case. When it accepts the close event, Qt leaves the main event loop and the application is immediately terminated (i.e. it returns back from the call to QApplication::exec() in your main() function).
.PP
The event handler QWidget::closeEvent() receives close events. The default implementation of this event handler accepts the close event. If you do not want your widget to be hidden, or want some special handing, you need to reimplement the event handler.
.PP
The closeEvent() in the Application Walkthrough shows a close event handler that asks whether to save the document before closing.
.PP
If you want your widget also to be deleted when it is closed, simply create it with the \fCWDestructiveClose\fR widget flag. This is very useful for the independent top-level windows of a multi window application. The Application Walkthrough example uses this too.
.PP
QObject emits the destroyed() signal when it is deleted. This is a useful signal if a widget needs to know when another widget is deleted.
.PP
If the last toplevel window is closed, the QApplication::lastWindowClosed() signal is emitted.
.PP
See also QWidget::close(), QWidget::hide(), QObject::destroyed(), QApplication::setMainWidget(), QApplication::lastWindowClosed(), QApplication::exec() and QApplication::quit().
.PP
Examples:
.(l
popup/popup.cpp
.)l
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QCloseEvent::QCloseEvent ()"
Constructs a close event object with the accept parameter flag set to FALSE.
.SH "void QCloseEvent::accept ()"
Sets the accept flag of the close event object.
.PP
Setting the accept flag indicates that the receiver of this event agrees to close the widget.
.PP
The accept flag is not set by default.
.PP
If you choose to accept in QWidget::closeEvent(), the widget will be hidden. If the widget's WDestructiveClose flag is set, it is also destroyed.
.PP
See also ignore() and QWidget::hide().
.PP
Examples:
.(l
popup/popup.cpp
.)l
.SH "void QCloseEvent::ignore ()"
Clears the accept flag of the close event object.
.PP
Clearing the accept flag indicates that the receiver of this event does not want the widget to be closed.
.PP
The accept flag is not set by default.
.PP
See also accept().
.SH "bool QCloseEvent::isAccepted () const"
Returns TRUE if the receiver of the event has agreed to close the widget.
.PP
See also  accept() and ignore().
.SH "SEE ALSO"
.BR http://doc.trolltech.com/qcloseevent.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2001 Trolltech AS, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports make our job much simpler. Thank you.
.P
In case of content or formattting problems with this manual page, please
report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qcloseevent.3qt) and the Qt
version (2.3.2).
