'\" t
.TH QFontDatabase 3qt "29 October 2001" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2001 Trolltech AS.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QFontDatabase \- Provides information about available fonts
.br
.PP
\fC#include <qfontdatabase.h>\fR
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQFontDatabase\fR () "
.br
.ti -1c
.BI "QStringList \fBfamilies\fR ( bool " "onlyForLocale" " = TRUE ) const"
.br
.ti -1c
.BI "QValueList<int> \fBpointSizes\fR ( const QString & " "family" ", const QString & style = QString::null, const QString & charSet = QString::null ) "
.br
.ti -1c
.BI "QStringList \fBstyles\fR ( const QString & " "family" ", const QString & charSet = QString::null ) const"
.br
.ti -1c
.BI "QStringList \fBcharSets\fR ( const QString & " "familyName" ", bool " "onlyForLocale" " = TRUE ) const"
.br
.ti -1c
.BI "QFont \fBfont\fR ( const QString " "familyName" ", const QString & " "style" ", int " "pointSize" ", const QString charSetName = QString::null ) "
.br
.ti -1c
.BI "bool \fBisBitmapScalable\fR ( const QString & " "family" ", const QString & style = QString::null, const QString & charSet = QString::null ) const"
.br
.ti -1c
.BI "bool \fBisSmoothlyScalable\fR ( const QString & " "family" ", const QString & style = QString::null, const QString & charSet = QString::null ) const"
.br
.ti -1c
.BI "bool \fBisScalable\fR ( const QString & " "family" ", const QString & style = QString::null, const QString & charSet = QString::null ) const"
.br
.ti -1c
.BI "bool \fBisFixedPitch\fR ( const QString & " "family" ", const QString & style = QString::null, const QString & charset = QString::null ) const"
.br
.ti -1c
.BI "QValueList<int> \fBsmoothSizes\fR ( const QString & " "family" ", const QString & " "style" ", const QString & charSet = QString::null ) "
.br
.ti -1c
.BI "bool \fBitalic\fR ( const QString & " "family" ", const QString & " "style" ", const QString & charSet = QString::null ) const"
.br
.ti -1c
.BI "bool \fBbold\fR ( const QString & " "family" ", const QString & " "style" ", const QString & charSet = QString::null ) const"
.br
.ti -1c
.BI "int \fBweight\fR ( const QString & " "family" ", const QString & " "style" ", const QString & charSet = QString::null ) const"
.br
.ti -1c
.BI "QString \fBstyleString\fR ( const QFont & ) "
.br
.in -1c
.SS "Static Public Members"
.in +1c
.ti -1c
.BI "QValueList<int> \fBstandardSizes\fR () "
.br
.ti -1c
.BI "QString \fBverboseCharSetName\fR ( const QString & charSetName ) "
.br
.ti -1c
.BI "QString \fBcharSetSample\fR ( const QString & charSetName ) "
.br
.in -1c
.SH DESCRIPTION
Provides information about available fonts.
.PP
QFontDatabase provides information about the available fonts of the underlying window system.
.PP
Most often you will simply want to query the database for all font families(), and their respective pointSizes(), styles() and charSets().
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QFontDatabase::QFontDatabase ()"
Creates a font database object.
.SH "bool QFontDatabase::bold ( const QString & family, const QString & style, const QString & charSet = QString::null ) const"
Returns if the font which matches the settings \fIfamily, style\fR and \fIcharSet\fR is bold or not.
.PP
See also italic() and weight().
.SH "QString QFontDatabase::charSetSample ( const QString & charSetName ) \fC[static]\fR"
Returns some sample characters which are in the charset \fIcharSetName.\fR
.SH "QStringList QFontDatabase::charSets ( const QString & family, bool onlyForLocale = TRUE ) const"
Returns a list of all char sets in which the font \fIfamily\fR is available in the current locale if \fIonlyForLocale\fR is TRUE, otherwise all charsets of \fIfamily\fR independent of the locale are returned.
.SH "QStringList QFontDatabase::families ( bool onlyForLocale = TRUE ) const"
Returns a list of names of all available font families in the current locale if \fIonlyForLocale\fR is TRUE, otherwise really all available font families independent of the current locale are returned.
.PP
If a family exists in several foundries, the returned name will be "foundry-family".
.SH "QFont QFontDatabase::font ( const QString family, const QString & style, int pointSize, const QString charSet = QString::null )"
Returns a QFont object which matches the settings of \fIfamily, style, pointsize\fR and \fIcharSet.\fR If no matching font could be created an empty QFont object is returned.
.SH "bool QFontDatabase::isBitmapScalable ( const QString & family, const QString & style = QString::null, const QString & charSet = QString::null ) const"
Returns whether the font which matches \fIfamily, style\fR and \fIcharSet\fR is a scaleable bitmap font. Scaling a bitmap font produces a bad, often hardly readable result, as the pixels of the font are scaled. It's better to scale such a font only to the available fixed sizes (which you can get with smoothSizes()).
.PP
See also isScalable() and isSmoothlyScalable().
.SH "bool QFontDatabase::isFixedPitch ( const QString & family, const QString & style = QString::null, const QString & charSet = QString::null ) const"
Returns whether the font which matches \fIfamily, style\fR and \fIcharSet\fR is fixed pitch.
.SH "bool QFontDatabase::isScalable ( const QString & family, const QString & style = QString::null, const QString & charSet = QString::null ) const"
Returns TRUE if the font which matches the settings \fIfamily, style\fR and \fIcharSet\fR is scaleable.
.PP
See also isBitmapScalable() and isSmoothlyScalable().
.SH "bool QFontDatabase::isSmoothlyScalable ( const QString & family, const QString & style = QString::null, const QString & charSet = QString::null ) const"
Returns whether the font which matches \fIfamily, style\fR and \fIcharSet\fR is a smoothly scaleable. If this function returns TRUE, it's save to scale this font to every size as the result will always look good.
.PP
See also isScalable() and isBitmapScalable().
.SH "bool QFontDatabase::italic ( const QString & family, const QString & style, const QString & charSet = QString::null ) const"
Returns if the font which matches the settings \fIfamily, style\fR and \fIcharSet\fR is italic or not.
.PP
See also weight() and bold().
.SH "QValueList<int> QFontDatabase::pointSizes ( const QString & family, const QString & style = QString::null, const QString & charSet = QString::null )"
Returns a list of all available sizes of the font \fIfamily\fR in the style \fIstyle\fR and the char set \fIcharSet.\fR
.PP
See also smoothSizes() and standardSizes().
.SH "QValueList<int> QFontDatabase::smoothSizes ( const QString & family, const QString & style, const QString & charSet = QString::null )"
Returns the point sizes of a font which matches \fIfamily, style\fR and \fIcharSet,\fR that is guaranteed to look good. For non-scalable fonts and smoothly scalable fonts this function is equivalent to pointSizes().
.PP
See also pointSizes() and standardSizes().
.SH "QValueList<int> QFontDatabase::standardSizes () \fC[static]\fR"
Returns a list of standard fontsizes.
.PP
See also smoothSizes() and pointSizes().
.SH "QString QFontDatabase::styleString ( const QFont & f )"
Returns a string with describes the style of the font \fIf.\fR This is Something like" Bold Italic".
.SH "QStringList QFontDatabase::styles ( const QString & family, const QString & charSet = QString::null ) const"
Retruns all available styles of the font \fIfamily\fR in the char set \fIcharSet.\fR
.SH "QString QFontDatabase::verboseCharSetName ( const QString & charSetName ) \fC[static]\fR"
Returns a string which gives a quite detailed description of the \fIcharSetName\fR which can be used e.g. for displaying in a dialog for the user.
.SH "int QFontDatabase::weight ( const QString & family, const QString & style, const QString & charSet = QString::null ) const"
Returns the weight of the font which matches the settings \fIfamily, style\fR and \fIcharSet.\fR
.PP
See also  italic() and bold().
.SH "SEE ALSO"
.BR http://doc.trolltech.com/qfontdatabase.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2001 Trolltech AS, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports make our job much simpler. Thank you.
.P
In case of content or formattting problems with this manual page, please
report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qfontdatabase.3qt) and the Qt
version (2.3.2).
