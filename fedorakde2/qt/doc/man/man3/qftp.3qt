'\" t
.TH QFtp 3qt "29 October 2001" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2001 Trolltech AS.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QFtp \- Implements the FTP protocol
.br
.PP
\fC#include <qftp.h>\fR
.PP
Inherits QNetworkProtocol.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQFtp\fR () "
.br
.ti -1c
.BI "virtual \fB~QFtp\fR () "
.br
.in -1c
.SS "Protected Members"
.in +1c
.ti -1c
.BI "void \fBparseDir\fR ( const QString & " "buffer" ", QUrlInfo & info ) "
.br
.in -1c
.SS "Protected Slots"
.in +1c
.ti -1c
.BI "void \fBhostFound\fR () (internal)"
.br
.ti -1c
.BI "void \fBconnected\fR () (internal)"
.br
.ti -1c
.BI "void \fBclosed\fR () (internal)"
.br
.ti -1c
.BI "void \fBreadyRead\fR () "
.br
.ti -1c
.BI "void \fBdataHostFound\fR () (internal)"
.br
.ti -1c
.BI "void \fBdataConnected\fR () "
.br
.ti -1c
.BI "void \fBdataClosed\fR () "
.br
.ti -1c
.BI "void \fBdataReadyRead\fR () "
.br
.ti -1c
.BI "void \fBdataBytesWritten\fR ( int nbytes ) "
.br
.in -1c
.SH DESCRIPTION
The QFtp class implements the FTP protocol
.PP
The QFtp class implements the FTP protocol. This class is derived from QNetworkProtocol and can be used with QUrlOperator. In fact, you normally will not use the QFtp class directly, but rather use it through the QUrlOperator like
.PP
.nf
.br
  QUrlOperator op( "ftp://ftp.trolltech.com" );
.br
  op.listChildren();
.fi
.PP
If you really need to use QFtp directly, don't forget to set the QUrlOperator on which it works using setUrl().
.PP
See also the Qt Network Documentation
.PP
See also QNetworkProtocol and QUrlOperator.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QFtp::QFtp ()"
Constructs a QFtp object.
.SH "QFtp::~QFtp () \fC[virtual]\fR"
Destructor.
.SH "void QFtp::dataBytesWritten ( int nbytes ) \fC[protected slot]\fR"
This method is called, when \fInbytes\fR have been successfully written to the data socket.
.SH "void QFtp::dataClosed () \fC[protected slot]\fR"
Called when the data connection has been closed.
.SH "void QFtp::dataConnected () \fC[protected slot]\fR"
Some operations require a data connection to the server. If this connection could be opened, this method handles the rest.
.SH "void QFtp::dataReadyRead () \fC[protected slot]\fR"
This method is called when new data arrived on the data socket.
.SH "void QFtp::error ( int code ) \fC[protected slot]\fR"
Reimplemented for internal reasons; the API is not affected.
.SH "void QFtp::operationGet ( QNetworkOperation * op ) \fC[virtual protected]\fR"
Reimplemented for internal reasons; the API is not affected.
.SH "void QFtp::operationListChildren ( QNetworkOperation * op ) \fC[virtual protected]\fR"
Reimplemented for internal reasons; the API is not affected.
.SH "void QFtp::operationMkDir ( QNetworkOperation * op ) \fC[virtual protected]\fR"
Reimplemented for internal reasons; the API is not affected.
.SH "void QFtp::operationPut ( QNetworkOperation * op ) \fC[virtual protected]\fR"
Reimplemented for internal reasons; the API is not affected.
.SH "void QFtp::operationRemove ( QNetworkOperation * op ) \fC[virtual protected]\fR"
Reimplemented for internal reasons; the API is not affected.
.SH "void QFtp::operationRename ( QNetworkOperation * op ) \fC[virtual protected]\fR"
Reimplemented for internal reasons; the API is not affected.
.SH "void QFtp::parseDir ( const QString & buffer, QUrlInfo & info ) \fC[protected]\fR"
Parses \fIbuffer,\fR which is one line of a directory list which came from the FTP server, and sets the values which have been parsed to \fIinfo.\fR
.SH "void QFtp::readyRead () \fC[protected slot]\fR"
If data arrived on the command socket, this slot is called. It looks at the data and passes it to the correct method which can handle it.
.SH "int QFtp::supportedOperations () const \fC[virtual]\fR"
Reimplemented for internal reasons; the API is not affected.
.SH "void QFtp::closed () \fC[protected slot]\fR"
For internal use only.
.SH "void QFtp::connected () \fC[protected slot]\fR"
For internal use only.
.SH "void QFtp::dataHostFound () \fC[protected slot]\fR"
For internal use only.
.SH "void QFtp::hostFound () \fC[protected slot]\fR"
For internal use only.
.SH "SEE ALSO"
.BR http://doc.trolltech.com/qftp.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2001 Trolltech AS, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports make our job much simpler. Thank you.
.P
In case of content or formattting problems with this manual page, please
report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qftp.3qt) and the Qt
version (2.3.2).
