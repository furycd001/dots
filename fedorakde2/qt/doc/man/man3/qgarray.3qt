'\" t
.TH QGArray 3qt "29 October 2001" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2001 Trolltech AS.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QGArray \- Internal class for implementing the
.br
.PP
\fC#include <qgarray.h>\fR
.PP
Inherited by QArray.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQGArray\fR () (internal)"
.br
.in -1c
.SS "Protected Members"
.in +1c
.ti -1c
.BI "\fBQGArray\fR ( int, int ) (internal)"
.br
.ti -1c
.BI "\fBQGArray\fR ( int size ) (internal)"
.br
.ti -1c
.BI "\fBQGArray\fR ( const QGArray & a ) (internal)"
.br
.ti -1c
.BI "virtual \fB~QGArray\fR () (internal)"
.br
.ti -1c
.BI "QGArray& \fBoperator=\fR ( const QGArray & a ) (internal)"
.br
.ti -1c
.BI "virtual void \fBdetach\fR () (internal)"
.br
.ti -1c
.BI "char* \fBdata\fR () const (internal)"
.br
.ti -1c
.BI "uint \fBnrefs\fR () const (internal)"
.br
.ti -1c
.BI "uint \fBsize\fR () const (internal)"
.br
.ti -1c
.BI "bool \fBisEqual\fR ( const QGArray & a ) const (internal)"
.br
.ti -1c
.BI "bool \fBresize\fR ( uint newsize ) (internal)"
.br
.ti -1c
.BI "bool \fBfill\fR ( const char * " "d" ", int " "len" ", uint sz ) (internal)"
.br
.ti -1c
.BI "QGArray& \fBassign\fR ( const QGArray & a ) (internal)"
.br
.ti -1c
.BI "QGArray& \fBassign\fR ( const char * " "d" ", uint len ) (internal)"
.br
.ti -1c
.BI "QGArray& \fBduplicate\fR ( const QGArray & a ) (internal)"
.br
.ti -1c
.BI "QGArray& \fBduplicate\fR ( const char * " "d" ", uint len ) (internal)"
.br
.ti -1c
.BI "void \fBstore\fR ( const char * " "d" ", uint len ) (internal)"
.br
.ti -1c
.BI "array_data* \fBsharedBlock\fR () const (internal)"
.br
.ti -1c
.BI "void \fBsetSharedBlock\fR ( array_data * p ) (internal)"
.br
.ti -1c
.BI "QGArray& \fBsetRawData\fR ( const char * " "d" ", uint len ) (internal)"
.br
.ti -1c
.BI "void \fBresetRawData\fR ( const char * " "d" ", uint len ) (internal)"
.br
.ti -1c
.BI "int \fBfind\fR ( const char * " "d" ", uint " "index" ", uint sz ) const (internal)"
.br
.ti -1c
.BI "int \fBcontains\fR ( const char * " "d" ", uint sz ) const (internal)"
.br
.ti -1c
.BI "void \fBsort\fR ( uint sz ) (internal)"
.br
.ti -1c
.BI "int \fBbsearch\fR ( const char * " "d" ", uint sz ) const (internal)"
.br
.ti -1c
.BI "char* \fBat\fR ( uint index ) const (internal)"
.br
.ti -1c
.BI "bool \fBsetExpand\fR ( uint " "index" ", const char * " "d" ", uint sz ) (internal)"
.br
.ti -1c
.BI "virtual array_data* \fBnewData\fR () "
.br
.ti -1c
.BI "virtual void \fBdeleteData\fR ( array_data * p ) (internal)"
.br
.in -1c
.SH DESCRIPTION
The QGArray class is an internal class for implementing the QArray class.
.PP
QGArray is a strictly internal class that acts as base class for the QArray template array.
.PP
It contains an array of bytes and has no notion of an array element.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QGArray::QGArray ()"
For internal use only.
.SH "QGArray::QGArray ( const QGArray & a ) \fC[protected]\fR"
For internal use only.
.SH "QGArray::QGArray ( int size ) \fC[protected]\fR"
For internal use only.
.SH "QGArray::QGArray ( int, int ) \fC[protected]\fR"
For internal use only.
.SH "QGArray::~QGArray () \fC[virtual protected]\fR"
For internal use only.
.SH "QGArray & QGArray::assign ( const QGArray & a ) \fC[protected]\fR"
For internal use only.
.SH "QGArray & QGArray::assign ( const char * d, uint len ) \fC[protected]\fR"
For internal use only.
.SH "char * QGArray::at ( uint index ) const \fC[protected]\fR"
For internal use only.
.SH "int QGArray::bsearch ( const char * d, uint sz ) const \fC[protected]\fR"
For internal use only.
.SH "int QGArray::contains ( const char * d, uint sz ) const \fC[protected]\fR"
For internal use only.
.SH "char * QGArray::data () const \fC[protected]\fR"
For internal use only.
.SH "void QGArray::deleteData ( array_data * p ) \fC[virtual protected]\fR"
For internal use only.
.PP
Reimplemented in QBitArray.
.SH "void QGArray::detach () \fC[virtual protected]\fR"
For internal use only.
.PP
Reimplemented in QBitArray, QByteArray and QArray.
.SH "QGArray & QGArray::duplicate ( const QGArray & a ) \fC[protected]\fR"
For internal use only.
.SH "QGArray & QGArray::duplicate ( const char * d, uint len ) \fC[protected]\fR"
For internal use only.
.SH "bool QGArray::fill ( const char * d, int len, uint sz ) \fC[protected]\fR"
For internal use only.
.SH "int QGArray::find ( const char * d, uint index, uint sz ) const \fC[protected]\fR"
For internal use only.
.SH "bool QGArray::isEqual ( const QGArray & a ) const \fC[protected]\fR"
For internal use only.
.SH "uint QGArray::nrefs () const \fC[protected]\fR"
For internal use only.
.SH "QGArray & QGArray::operator= ( const QGArray & a ) \fC[protected]\fR"
For internal use only.
.SH "void QGArray::resetRawData ( const char * d, uint len ) \fC[protected]\fR"
For internal use only.
.SH "bool QGArray::resize ( uint newsize ) \fC[protected]\fR"
For internal use only.
.SH "bool QGArray::setExpand ( uint index, const char * d, uint sz ) \fC[protected]\fR"
For internal use only.
.SH "QGArray & QGArray::setRawData ( const char * d, uint len ) \fC[protected]\fR"
For internal use only.
.SH "void QGArray::setSharedBlock ( array_data * p ) \fC[protected]\fR"
For internal use only.
.SH "array_data * QGArray::sharedBlock () const \fC[protected]\fR"
For internal use only.
.SH "uint QGArray::size () const \fC[protected]\fR"
For internal use only.
.SH "void QGArray::sort ( uint sz ) \fC[protected]\fR"
For internal use only.
.SH "void QGArray::store ( const char * d, uint len ) \fC[protected]\fR"
For internal use only.
.SH "SEE ALSO"
.BR http://doc.trolltech.com/qgarray.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2001 Trolltech AS, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports make our job much simpler. Thank you.
.P
In case of content or formattting problems with this manual page, please
report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qgarray.3qt) and the Qt
version (2.3.2).
