'\" t
.TH QGCache 3qt "29 October 2001" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2001 Trolltech AS.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QGCache \- Internal class for implementing
.br
.PP
\fC#include <qgcache.h>\fR
.PP
Inherits QCollection.
.PP
Inherited by QAsciiCache, QCache and QIntCache.
.PP
.SS "Protected Members"
.TP
enum \fBKeyType\fR { StringKey, AsciiKey, IntKey, PtrKey }
.TP
\fBQGCache\fR ( int maxCost, uint size, KeyType kt, bool caseSensitive, bool copyKeys ) (internal)
.TP
\fBQGCache\fR ( const QGCache & ) (internal)
.TP
\fB~QGCache\fR () (internal)
.TP
QGCache& \fBoperator=\fR ( const QGCache & ) (internal)
.TP
virtual uint \fBcount\fR () const (internal)
.TP
uint \fBsize\fR () const (internal)
.TP
int \fBmaxCost\fR () const (internal)
.TP
int \fBtotalCost\fR () const (internal)
.TP
void \fBsetMaxCost\fR ( int maxCost ) (internal)
.TP
virtual void \fBclear\fR () (internal)
.TP
bool \fBinsert_string\fR ( const QString & key, QCollection::Item, int cost, int priority ) (internal)
.TP
bool \fBinsert_other\fR ( const char * key, QCollection::Item, int cost, int priority ) (internal)
.TP
bool \fBremove_string\fR ( const QString & key ) (internal)
.TP
bool \fBremove_other\fR ( const char * key ) (internal)
.TP
QCollection::Item \fBtake_string\fR ( const QString & key ) (internal)
.TP
QCollection::Item \fBtake_other\fR ( const char * key ) (internal)
.TP
QCollection::Item \fBfind_string\fR ( const QString & key, bool ref=TRUE ) const (internal)
.TP
QCollection::Item \fBfind_other\fR ( const char * key, bool ref=TRUE ) const (internal)
.TP
void \fBstatistics\fR () const (internal)
.SH DESCRIPTION
The QGCache class is an internal class for implementing QCache template classes.
.PP
QGCache is a strictly internal class that acts as a base class for the collection classes QCache and QIntCache.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QGCache::QGCache ( const QGCache & ) \fC[protected]\fR"
For internal use only.
.SH "QGCache::QGCache ( int maxCost, uint size, KeyType kt, bool caseSensitive, bool copyKeys ) \fC[protected]\fR"
For internal use only.
.SH "QGCache::~QGCache () \fC[protected]\fR"
For internal use only.
.SH "void QGCache::clear () \fC[virtual protected]\fR"
For internal use only.
.PP
Reimplemented from QCollection.
.SH "uint QGCache::count () const \fC[virtual protected]\fR"
For internal use only.
.PP
Reimplemented from QCollection.
.SH "QCollection::Item QGCache::find_other( const char * key, bool ref=TRUE ) const \fC[protected]\fR"
For internal use only.
.SH "QCollection::Item QGCache::find_string( const QString & key, bool ref=TRUE ) const \fC[protected]\fR"
For internal use only.
.SH "bool QGCache::insert_other ( const char * key, QCollection::Item data, int cost, int priority ) \fC[protected]\fR"
For internal use only.
.SH "bool QGCache::insert_string ( const QString & key, QCollection::Item data, int cost, int priority ) \fC[protected]\fR"
For internal use only.
.SH "int QGCache::maxCost () const \fC[protected]\fR"
For internal use only.
.SH "QGCache & QGCache::operator= ( const QGCache & ) \fC[protected]\fR"
For internal use only.
.SH "bool QGCache::remove_other ( const char * key ) \fC[protected]\fR"
For internal use only.
.SH "bool QGCache::remove_string ( const QString & key ) \fC[protected]\fR"
For internal use only.
.SH "void QGCache::setMaxCost ( int maxCost ) \fC[protected]\fR"
For internal use only.
.SH "uint QGCache::size () const \fC[protected]\fR"
For internal use only.
.SH "void QGCache::statistics () const \fC[protected]\fR"
For internal use only.
.SH "QCollection::Item QGCache::take_other( const char * key ) \fC[protected]\fR"
For internal use only.
.SH "QCollection::Item QGCache::take_string( const QString & key ) \fC[protected]\fR"
For internal use only.
.SH "int QGCache::totalCost () const \fC[protected]\fR"
For internal use only.
.SH "SEE ALSO"
.BR http://doc.trolltech.com/qgcache.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2001 Trolltech AS, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports make our job much simpler. Thank you.
.P
In case of content or formattting problems with this manual page, please
report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qgcache.3qt) and the Qt
version (2.3.2).
