'\" t
.TH QImageFormat 3qt "29 October 2001" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2001 Trolltech AS.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QImageFormat \- Incremental image decoder for a specific image format
.br
.PP
\fC#include <qasyncimageio.h>\fR
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "virtual \fB~QImageFormat\fR () "
.br
.ti -1c
.BI "virtual int \fBdecode\fR ( QImage & " "img" ", QImageConsumer * " "consumer" ", const uchar * " "buffer" ", int length ) "
.br
.in -1c
.SH DESCRIPTION
Incremental image decoder for a specific image format.
.PP
By making a derived classes of QImageFormatType which in turn creates objects that are a subclass of QImageFormat, you can add support for more incremental image formats, allowing such formats to be sources for a QMovie, or for the first frame of the image stream to be loaded as a QImage or QPixmap.
.PP
Your new subclass must reimplement the decode() function in order to process your new format.
.PP
New QImageFormat objects are generated by new QImageFormatType factories.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QImageFormat::~QImageFormat () \fC[virtual]\fR"
Destructs the object.
.SH "int QImageFormat::decode ( QImage & img, QImageConsumer * consumer, const uchar * buffer, int length ) \fC[virtual]\fR"
New subclasses must reimplement this method.
.PP
It should decode some or all of the bytes from \fIbuffer\fR into \fIimg,\fR calling the methods of \fIconsumer\fR as the decoding proceeds to inform that consumer of changes to the image. The consumer may be 0, in which case the function should just process the data into \fIimg\fR without telling any consumer about the changes. Note that the decoder must store enough state to be able to continue in subsequent calls to this method - this is the essence of the incremental image loading.
.PP
The function should return without processing all the data if it reaches the end of a frame in the input.
.PP
The function must return the number of bytes it has processed.
.SH "SEE ALSO"
.BR http://doc.trolltech.com/qimageformat.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2001 Trolltech AS, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports make our job much simpler. Thank you.
.P
In case of content or formattting problems with this manual page, please
report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qimageformat.3qt) and the Qt
version (2.3.2).
