'\" t
.TH QLayoutIterator 3qt "29 October 2001" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2001 Trolltech AS.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QLayoutIterator \- Iterators over
.br
.PP
\fC#include <qabstractlayout.h>\fR
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQLayoutIterator\fR ( QGLayoutIterator * i ) "
.br
.ti -1c
.BI "\fBQLayoutIterator\fR ( const QLayoutIterator & i ) "
.br
.ti -1c
.BI "\fB~QLayoutIterator\fR () "
.br
.ti -1c
.BI "QLayoutIterator& \fBoperator=\fR ( const QLayoutIterator & i ) "
.br
.ti -1c
.BI "QLayoutItem* \fBoperator++\fR () "
.br
.ti -1c
.BI "QLayoutItem* \fBcurrent\fR () "
.br
.ti -1c
.BI "QLayoutItem* \fBtakeCurrent\fR () "
.br
.ti -1c
.BI "void \fBdeleteCurrent\fR () "
.br
.in -1c
.SH DESCRIPTION
The QLayoutIterator class provides iterators over QLayoutItem
.PP
Use QLayoutItem::iterator() to create an iterator over a layout.
.PP
QLayoutIterator uses explicit sharing with a reference count. If an iterator is copied, and one of the copies is modified, both iterators will be modified.
.PP
A QLayoutIterator is not protected against changes in its layout. If the layout is modified or deleted, the iterator will become invalid. It is not possible to test for validity. It is safe to delete an invalid layout. Any other access may lead to an illegal memory reference, and the abnormal termination of the program.
.PP
Calling takeCurrent() or deleteCurrent() leaves the iterator in a valid state, but may invalidate any other iterators that access the same layout.
.PP
The following code will draw a rectangle for each layout item in the layout structure of the widget.
.PP
.nf
.br
  static void paintLayout( QPainter *p, QLayoutItem *lay )
.br
  {
.br
      QLayoutIterator it = lay->iterator();
.br
      QLayoutItem *child;
.br
      while ( (child = it.current() ) ) {
.br
          paintLayout( p, child );
.br
          it.next();
.br
      }
.br
      p->drawRect( lay->geometry() );
.br
  }
.br
  void ExampleWidget::paintEvent( QPaintEvent * )
.br
  {
.br
      QPainter p( this );
.br
      if ( layout() )
.br
          paintLayout( &p, layout() );
.br
  }
.fi
.PP
All the functionality of QLayoutIterator is implemented by subclasses of QGLayoutIterator. Note that there is not much point in subclassing QLayoutIterator, since none of the functions are virtual.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QLayoutIterator::QLayoutIterator ( QGLayoutIterator * gi )"
Constructs an iterator based on \fIgi.\fR The constructed iterator takes ownership of \fIgi,\fR and will delete it.
.PP
This constructor is provided for layout implementors. Application programmers should use QLayoutItem::iterator() to create an iterator over a layout.
.SH "QLayoutIterator::QLayoutIterator ( const QLayoutIterator & i )"
Creates a shallow copy of \fIi;\fR if the copy is modified, then the original will also be modified.
.SH "QLayoutIterator::~QLayoutIterator ()"
Destroys the iterator.
.SH "QLayoutItem * QLayoutIterator::current ()"
Returns the current item, or 0 if there is no current item.
.SH "void QLayoutIterator::deleteCurrent ()"
Removes and deletes the current child item from the layout and moves the iterator to the next item. This iterator will still be valid, but any other iterator over the same layout may become invalid.
.SH "QLayoutItem * QLayoutIterator::operator++ ()"
Moves the iterator to the next child item, and returns that item, or 0 if there is no such item.
.SH "QLayoutIterator & QLayoutIterator::operator= ( const QLayoutIterator & i )"
Assigns \fIi\fR to this iterator and returns a reference to this iterator.
.SH "QLayoutItem * QLayoutIterator::takeCurrent ()"
Removes the current child item from the layout without deleting it
and moves the iterator to the next item. Returns the removed item, or
0 if there was no item to be removed. This iterator will still be
valid, but any other iterator over the same layout may become
invalid.
.SH "SEE ALSO"
.BR http://doc.trolltech.com/qlayoutiterator.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2001 Trolltech AS, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports make our job much simpler. Thank you.
.P
In case of content or formattting problems with this manual page, please
report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qlayoutiterator.3qt) and the Qt
version (2.3.2).
