'\" t
.TH QPicture 3qt "29 October 2001" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2001 Trolltech AS.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QPicture \- Paint device that records and replays
.br
.PP
\fC#include <qpicture.h>\fR
.PP
Inherits QPaintDevice.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQPicture\fR ( int " "formatVersion" " = 0 ) "
.br
.ti -1c
.BI "\fB~QPicture\fR () "
.br
.ti -1c
.BI "bool \fBisNull\fR () const"
.br
.ti -1c
.BI "uint \fBsize\fR () const"
.br
.ti -1c
.BI "const char* \fBdata\fR () const"
.br
.ti -1c
.BI "virtual void \fBsetData\fR ( const char * " "data" ", uint size ) "
.br
.ti -1c
.BI "bool \fBplay\fR ( QPainter * ) "
.br
.ti -1c
.BI "bool \fBload\fR ( const QString & fileName ) "
.br
.ti -1c
.BI "bool \fBsave\fR ( const QString & fileName ) "
.br
.ti -1c
.BI "QPicture& \fBoperator=\fR ( const QPicture & ) "
.br
.in -1c
.SS "Protected Members"
.in +1c
.ti -1c
.BI "virtual bool \fBcmd\fR ( int, QPainter *, QPDevCmdParam * ) (internal)"
.br
.ti -1c
.BI "virtual int \fBmetric\fR ( int ) const"
.br
.in -1c
.SH RELATED FUNCTION DOCUMENTATION
(Note that these are not member functions.)
.in +1c
.ti -1c
.BI "QDataStream & \fBoperator>>\fR (QDataStream & " "s" ", QPicture & " "r" ")"
.br
.ti -1c
.BI "QDataStream & \fBoperator<<\fR (QDataStream & " "s" ", const QPicture & " "r" ")"
.br
.in -1c
.SH DESCRIPTION
The QPicture class is a paint device that records and replays QPainter commands.
.PP
A picture serializes painter commands to an IO device in a platform-independent format. A picture created under Windows can be read on a Sun SPARC.
.PP
Pictures are called meta-files on some platforms.
.PP
Qt pictures use a proprietary binary format. Unlike native picture (meta-file) formats on many window systems, Qt pictures have no limitations regarding the contents. Everything that can be painted can also be stored in a picture (fonts, pixmaps, regions, transformed graphics etc.)
.PP
Example of how to record a picture:
.PP
.nf
.br
    QPicture  pic;
.br
    QPainter  p;
.br
    p.begin( &pic );                            // paint in picture
.br
    p.drawEllipse( 10,20, 80,70 );              // draw an ellipse
.br
    p.end();                                    // painting done
.br
    pic.save( "drawing.pic" );                  // save picture
.fi
.PP
Example of how to replay a picture:
.PP
.nf
.br
    QPicture  pic;
.br
    pic.load( "drawing.pic" );                  // load picture
.br
    QPainter  p;
.br
    p.begin( &myWidget );                       // paint in myWidget
.br
    p.drawPicture( pic );                       // draw the picture
.br
    p.end();                                    // painting done
.fi
.PP
Examples:
.(l
xform/xform.cpp picture/picture.cpp
.)l
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QPicture::QPicture ( int formatVer = 0 )"
Constructs an empty picture.
.PP
The \fIformatVersion\fR parameter may be used to create a QPicture that can be read by applications that are compiled with earlier versions of Qt. Currently supported is \fIformatVersion\fR == 1, which will make a QPicture which is stored in a format that is binary compatible with Qt 1.x programs, and \fIformatVersion\fR == 2, for a format compatible with Qt 2.0.x programs.
.PP
Reading of pictures generated by earlier versions of Qt is supported and needs no special coding; the format is automatically detected.
.SH "QPicture::~QPicture ()"
Destructs the picture.
.SH "const char* QPicture::data () const"
Returns a pointer to the picture data. The returned pointer is null if the picture contains no data.
.PP
See also size() and isNull().
.SH "bool QPicture::isNull () const"
Returns TRUE if the picture contains no data, otherwise FALSE.
.SH "bool QPicture::load ( const QString & fileName )"
Loads a picture from the file specified by \fIfileName\fR and returns TRUE if successful, otherwise FALSE.
.PP
See also save().
.PP
Examples:
.(l
xform/xform.cpp picture/picture.cpp
.)l
.SH "int QPicture::metric ( int m ) const \fC[virtual protected]\fR"
Internal implementation of the virtual QPaintDevice::metric() function.
.PP
Use the QPaintDeviceMetrics class instead.
.PP
A picture has the following hard coded values: width=640, height=480, dpi = 72, numcolors=16777216 and depth=24.
.PP
Reimplemented from QPaintDevice.
.SH "QPicture& QPicture::operator= ( const QPicture & p )"
Makes this picture be a deep copy of \fIp.\fR
.SH "bool QPicture::play ( QPainter * painter )"
Replays the picture using \fIpainter\fR and returns TRUE if successful, or FALSE if the internal picture data is inconsistent.
.PP
This function does exactly the same as QPainter::drawPicture().
.SH "bool QPicture::save ( const QString & fileName )"
Saves a picture to the file specified by \fIfileName\fR and returns TRUE if successful, otherwise FALSE.
.PP
See also load().
.PP
Examples:
.(l
picture/picture.cpp
.)l
.SH "void QPicture::setData ( const char * data, uint size ) \fC[virtual]\fR"
Sets the picture data directly from \fIdata\fR and \fIsize.\fR This function copies the input data.
.PP
See also data() and size().
.SH "uint QPicture::size () const"
Returns the size of the picture data.
.PP
See also data().
.SH "bool QPicture::cmd ( int c, QPainter *, QPDevCmdParam * p ) \fC[virtual protected]\fR"
For internal use only.
.PP
Reimplemented from QPaintDevice.
.SH RELATED FUNCTION DOCUMENTATION
.SH "QDataStream & operator>> (QDataStream & s, QPicture & r)"
Reads a QPicture from the stream and returns a reference to the stream.
.SH "QDataStream & operator<< (QDataStream & s, const QPicture & r)"
Writes a QPicture to the stream and returns a reference to the stream.
.SH "SEE ALSO"
.BR http://doc.trolltech.com/qpicture.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2001 Trolltech AS, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports make our job much simpler. Thank you.
.P
In case of content or formattting problems with this manual page, please
report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qpicture.3qt) and the Qt
version (2.3.2).
