'\" t
.TH QPtrDictIterator 3qt "29 October 2001" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2001 Trolltech AS.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QPtrDictIterator \- Iterator for
.br
.PP
\fC#include <qptrdict.h>\fR
.PP
Inherits QGDictIterator.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQPtrDictIterator\fR ( const QPtrDict<type> & dict ) "
.br
.ti -1c
.BI "\fB~QPtrDictIterator\fR () "
.br
.ti -1c
.BI "uint \fBcount\fR () const"
.br
.ti -1c
.BI "bool \fBisEmpty\fR () const"
.br
.ti -1c
.BI "type* \fBtoFirst\fR () "
.br
.ti -1c
.BI "operator \fBtype*\fR ()const"
.br
.ti -1c
.BI "type* \fBcurrent\fR () const"
.br
.ti -1c
.BI "void* \fBcurrentKey\fR () const"
.br
.ti -1c
.BI "type* \fBoperator\fR () "
.br
.ti -1c
.BI "type* \fBoperator++\fR () "
.br
.ti -1c
.BI "type* \fBoperator+=\fR ( uint jump ) "
.br
.in -1c
.SH DESCRIPTION
The QPtrDictIterator class provides an iterator for QPtrDict collections.
.PP
QPtrDictIterator is implemented as a template class. Define a template instance QPtrDictIterator<X> to create a dictionary iterator that operates on QPtrDict<X> (dictionary of X*).
.PP
Example:
.PP
.nf
.br
    #include <qptrdict.h>
.br
    #include <stdio.h>
.br
.br
    void main()
.br
    {
.br
        int *a = new int[12];
.br
        int *b = new int[10];
.br
        int *c = new int[18];
.br
        int *d = new int[13];
.br
.br
        QPtrDict<char> dict;               // maps void* -> char*
.br
.br
        dict.insert( a, "a is int[12]" );  // describe pointers
.br
        dict.insert( b, "b is int[10]" );
.br
        dict.insert( c, "c is int[18]" );
.br
.br
        QPtrDictIterator<char> it( dict ); // iterator for dict
.br
.br
        while ( it.current() ) {
.br
            printf( "%x -> %s\\n", it.currentKey(), it.current() );
.br
            ++it;
.br
        }
.br
    }
.fi
.PP
Program output:
.PP
.nf
.br
        804a788 -> a is int[12]
.br
        804a7f0 -> c is int[18]
.br
        804a7c0 -> b is int[10]
.fi
.PP
Note that the traversal order is arbitrary, you are not guaranteed the order above.
.PP
Multiple iterators may independently traverse the same dictionary. A QPtrDict knows about all iterators that are operating on the dictionary. When an item is removed from the dictionary, QPtrDict update all iterators that are referring the removed item to point to the next item in the traversing order.
.PP
See also QPtrDict and Collection Classes
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QPtrDictIterator::QPtrDictIterator ( const QPtrDict<type> & dict )"
Constructs an iterator for \fIdict.\fR The current iterator item is set to point on the first item in the \fIdict.\fR
.SH "QPtrDictIterator::~QPtrDictIterator ()"
Destroys the iterator.
.SH "QPtrDictIterator::operator type * () const"
Cast operator. Returns a pointer to the current iterator item. Same as current().
.SH "uint QPtrDictIterator::count () const"
Returns the number of items in the dictionary this iterator operates on.
.PP
See also isEmpty().
.SH "type * QPtrDictIterator::current () const"
Returns a pointer to the current iterator item.
.SH "void * QPtrDictIterator::currentKey () const"
Returns the key for the current iterator item.
.SH "bool QPtrDictIterator::isEmpty () const"
Returns TRUE if the dictionary is empty, i.e. count() == 0. Returns FALSE otherwise.
.PP
See also count().
.SH "type * QPtrDictIterator::operator() ()"
Makes the succeeding item current and returns the original current item.
.PP
If the current iterator item was the last item in the dictionary or if it was null, null is returned.
.SH "type * QPtrDictIterator::operator++ ()"
Prefix ++ makes the succeeding item current and returns the new current item.
.PP
If the current iterator item was the last item in the dictionary or if it was null, null is returned.
.SH "type * QPtrDictIterator::operator+= ( uint jump )"
Sets the current item to the item \fIjump\fR positions after the current item, and returns a pointer to that item.
.PP
If that item is beyond the last item or if the dictionary is empty, it sets the current item to null and returns null.
.SH "type * QPtrDictIterator::toFirst ()"
Sets the current iterator item to point to the first item in the
dictionary and returns a pointer to the item.
If the dictionary is  empty it sets the current item to null and 
returns null.
.SH "SEE ALSO"
.BR http://doc.trolltech.com/qptrdictiterator.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2001 Trolltech AS, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports make our job much simpler. Thank you.
.P
In case of content or formattting problems with this manual page, please
report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qptrdictiterator.3qt) and the Qt
version (2.3.2).
