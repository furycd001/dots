'\" t
.TH QSignal 3qt "29 October 2001" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2001 Trolltech AS.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QSignal \- Can be used to send signals without parameters
.br
.PP
\fC#include <qsignal.h>\fR
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQSignal\fR ( QObject * " "parent" "=0, const char * " "name" "=0 ) "
.br
.ti -1c
.BI "\fB~QSignal\fR () "
.br
.ti -1c
.BI "const char* \fBname\fR () const"
.br
.ti -1c
.BI "virtual void \fBsetName\fR ( const char * name ) "
.br
.ti -1c
.BI "bool \fBconnect\fR ( const QObject * " "receiver" ", const char * member ) "
.br
.ti -1c
.BI "bool \fBdisconnect\fR ( const QObject * " "receiver" ", const char * " "member" "=0 ) "
.br
.ti -1c
.BI "bool \fBisBlocked\fR () const"
.br
.ti -1c
.BI "void \fBblock\fR ( bool b ) "
.br
.ti -1c
.BI "void \fBactivate\fR () "
.br
.ti -1c
.BI "void \fBsetParameter\fR ( int value ) "
.br
.ti -1c
.BI "int \fBparameter\fR () const"
.br
.in -1c
.SH DESCRIPTION
The QSignal class can be used to send signals without parameters.
.PP
QSignal is a simple extension of QObject that can send plain signals without parameters. If you want to send signals from a class that does not inherit QObject, you can create an internal QSignal object to emit the signal. You must also provide a function that connects the signal to an outside object slot. This is how we have implemented signals in the QMenuData class, which is not a QObject.
.PP
In general, we recommend inheriting QObject instead. QObject provides much more functionality.
.PP
Note that QObject is a \fIprivate\fR base class of QSignal, i.e. you cannot call any QObject member functions from a QSignal object.
.PP
Example:
.PP
.nf
.br
    #include <qsignal.h>
.br
.br
    class MyClass
.br
    {
.br
    public:
.br
        MyClass();
.br
       ~MyClass();
.br
.br
        void doSomething();
.br
.br
        void connect( QObject *receiver, const char *member );
.br
.br
    private:
.br
        QSignal *sig;
.br
    };
.br
.br
    MyClass::MyClass()
.br
    {
.br
        sig = new QSignal;
.br
    }
.br
.br
    MyClass::~MyClass()
.br
    {
.br
        delete sig;
.br
    }
.br
.br
    void MyClass::doSomething()
.br
    {
.br
        // ... does something
.br
        sig->activate();        // activates the signal
.br
    }
.br
.br
    void MyClass::connect( QObject *receiver, const char *member )
.br
    {
.br
        sig->connect( receiver, member );
.br
    }
.fi
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QSignal::QSignal ( QObject * parent=0, const char * name=0 )"
Constructs a signal object with the parent object \fIparent\fR and a \fIname.\fR These arguments are passed directly to QObject.
.SH "QSignal::~QSignal ()"
Destructs the signal. All connections are removed, as is the case with all QObjects.
.SH "void QSignal::activate ()"
Emits the signal.
.PP
See also isBlocked().
.SH "void QSignal::block ( bool b )"
Blocks the signal if \fIb\fR is TRUE, or unblocks the signal if \fIb\fR is FALSE.
.PP
An activated signal disappears into hyperspace if it is blocked.
.PP
See also isBlocked(), activate() and QObject::blockSignals().
.SH "bool QSignal::connect ( const QObject * receiver, const char * member )"
Connects the signal to \fImember\fR in object \fIreceiver.\fR
.PP
See also disconnect() and QObject::connect().
.SH "bool QSignal::disconnect ( const QObject * receiver, const char * member=0 )"
Disonnects the signal from \fImember\fR in object \fIreceiver.\fR
.PP
See also connect() and QObject::disconnect().
.SH "bool QSignal::isBlocked () const"
Returns TRUE if the signal is blocked, or FALSE if it is not blocked.
.PP
The signal is not blocked by default.
.PP
See also block() and QObject::signalsBlocked().
.SH "const char * QSignal::name () const"
Returns the name of this signal object.
.PP
Since QObject is a private base class, we have added this function, which calls QObject::name().
.SH "int QSignal::parameter () const"
Returns the signal's parameter.
.SH "void QSignal::setName ( const char * name ) \fC[virtual]\fR"
Sets the name of this signal object to \fIname.\fR
.PP
Since QObject is a private base class, we have added this function, which calls QObject::setName().
.PP
Reimplemented from QObject.
.SH "void QSignal::setParameter ( int value )"
Sets the signal's parameter to \fIvalue\fR
.SH "SEE ALSO"
.BR http://doc.trolltech.com/qsignal.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2001 Trolltech AS, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports make our job much simpler. Thank you.
.P
In case of content or formattting problems with this manual page, please
report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qsignal.3qt) and the Qt
version (2.3.2).
