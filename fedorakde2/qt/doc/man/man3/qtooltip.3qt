'\" t
.TH QToolTip 3qt "29 October 2001" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2001 Trolltech AS.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QToolTip \- Tool tips (sometimes called balloon help) for any widget or rectangular part of a widget
.br
.PP
\fC#include <qtooltip.h>\fR
.PP
Inherits Qt.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQToolTip\fR ( QWidget *, QToolTipGroup * = 0 ) "
.br
.ti -1c
.BI "QWidget* \fBparentWidget\fR () const"
.br
.ti -1c
.BI "QToolTipGroup* \fBgroup\fR () const"
.br
.in -1c
.SS "Static Public Members"
.in +1c
.ti -1c
.BI "void \fBadd\fR ( QWidget *, const QString & ) "
.br
.ti -1c
.BI "void \fBadd\fR ( QWidget *, const QString &, QToolTipGroup *, const QString & ) "
.br
.ti -1c
.BI "void \fBremove\fR ( QWidget * ) "
.br
.ti -1c
.BI "void \fBadd\fR ( QWidget *, const QRect &, const QString & ) "
.br
.ti -1c
.BI "void \fBadd\fR ( QWidget *, const QRect &, const QString &, QToolTipGroup *, const QString & ) "
.br
.ti -1c
.BI "void \fBremove\fR ( QWidget *, const QRect & ) "
.br
.ti -1c
.BI "void \fBhide\fR () "
.br
.ti -1c
.BI "QFont \fBfont\fR () "
.br
.ti -1c
.BI "void \fBsetFont\fR ( const QFont & ) "
.br
.ti -1c
.BI "QPalette \fBpalette\fR () "
.br
.ti -1c
.BI "void \fBsetPalette\fR ( const QPalette & ) "
.br
.ti -1c
.BI "void \fBsetEnabled\fR ( bool ) "
.br
.ti -1c
.BI "bool \fBenabled\fR () "
.br
.in -1c
.SS "Protected Members"
.in +1c
.ti -1c
.BI "virtual void \fBmaybeTip\fR ( const QPoint & ) "
.br
.ti -1c
.BI "void \fBtip\fR ( const QRect &, const QString & ) "
.br
.ti -1c
.BI "void \fBtip\fR ( const QRect &, const QString &, const QString & ) "
.br
.ti -1c
.BI "void \fBclear\fR () "
.br
.in -1c
.SH DESCRIPTION
The QToolTip class provides tool tips (sometimes called balloon help) for any widget or rectangular part of a widget.
.PP
The tip is a short, one-line text reminding the user of the widget's or rectangle's function. It is drawn immediately below the region, in a distinctive black on yellow combination. In Motif style, Qt's tool tips look much like Motif's but feel more like Windows 95 tool tips.
.PP
QToolTipGroup provides a way for tool tips to display another text elsewhere (most often in a status bar).
.PP
At any point in time, QToolTip is either dormant or active. In dormant mode the tips are not shown, and in active mode they are. The mode is global, not particular to any one widget.
.PP
QToolTip switches from dormant to active mode when the user lets the mouse rest on a tip-equipped region for a second or so, and remains in active mode until the user either clicks a mouse button, presses a key, lets the mouse rest for five seconds, or moves the mouse outside \fIall\fR tip-equpped regions for at least a second.
.PP
The QToolTip class can be used in three different ways: 
.IP 1
Adding a tip to an entire widget. 
.IP 2
Adding a tip to a fixed rectangle within a widget. 
.IP 3
Adding a tip to a dynamic rectangle within a widget. 
.PP
To add a tip to a widget, call the \fIstatic\fR function QToolTip::add() with the widget and tip as arguments:
.PP
.nf
.br
    QToolTip::add( quitButton, "Leave the application" );
.fi
.PP
This is the simplest and most common use of QToolTip. The tip will be deleted automatically when \fIquitButton\fR is deleted, but you can remove it yourself, too:
.PP
.nf
.br
    QToolTip::remove( quitButton );
.fi
.PP
You can also display another text (typically in a status bar), courtesy of QToolTipGroup. This example assumes that \fIg\fR is a \fCQToolTipGroup *\fR and already connected to the appropriate status bar:
.PP
.nf
.br
    QToolTip::add( quitButton, "Leave the application", g,
.br
                   "Leave the application, without asking for confirmation" );
.br
    QToolTip::add( closeButton, "Close this window", g,
.br
                   "Close this window, without asking for confirmation" );
.fi
.PP
To add a tip to a fixed rectangle within a widget, call the static function QToolTip::add() with the widget, rectangle and tip as arguments. (See the tooltip/tooltip.cpp example.) Again, you can supply a QToolTipGroup * and another text if you want.
.PP
Both of the above are one-liners and cover the vast majority of cases. The third and most general way to use QToolTip uses a pure virtual function to decide whether to pop up a tool tip. The tooltip/tooltip.cpp example demonstrates this too. This mode can be used to implement e.g. tips for text that can move as the user scrolls.
.PP
To use QToolTip like this, you need to subclass QToolTip and reimplement maybeTip(). maybeTip() will be called when there's a chance that a tip should pop up. It must decide whether to show a tip, and possibly call add() with the rectangle the tip applies to, the tip's text and optionally the QToolTipGroup details. The tip will disappear once the mouse moves outside the rectangle you supply, and \fInot reappear\fR - maybeTip() will be called again if the user lets the mouse rest within the same rectangle again. You can forcibly remove the tip by calling remove() with no arguments. This is handy if the widget scrolls.
.PP
Tooltips can be globally disabled using QToolTip::setEnabled(), or disabled in groups with QToolTipGroup::setEnabled().
.PP
See also QStatusBar, QWhatsThis, QToolTipGroup and GUI Design Handbook: Tool Tip
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QToolTip::QToolTip ( QWidget * parent, QToolTipGroup * group = 0 )"
Constructs a tool tip object. This is necessary only if you need tool tips on regions that can move within the widget (most often because the widget's contents can scroll).
.PP
\fIparent\fR is the widget you want to add dynamic tool tips to and \fIgroup\fR (optional) is the tool tip group they should belong to.
.PP
See also maybeTip().
.SH "void QToolTip::add ( QWidget * widget, const QRect & rect, const QString & text ) \fC[static]\fR"
Adds a tool tip to a fixed rectangle within \fIwidget. text\fR is the text shown in the tool tip. QToolTip makes a deep copy of this string.
.SH "void QToolTip::add ( QWidget * widget, const QRect & rect, const QString & text, QToolTipGroup * group, const QString & groupText ) \fC[static]\fR"
Adds a tool tip to an entire \fIwidget,\fR and to tool tip group \fIgroup.\fR
.PP
\fItext\fR is the text shown in the tool tip and \fIlongText\fR is the text emitted from \fIgroup.\fR QToolTip makes deep copies of both strings.
.PP
Normally, \fIlongText\fR is shown in a status bar or similar.
.SH "void QToolTip::add ( QWidget * widget, const QString & text ) \fC[static]\fR"
Adds a tool tip to \fIwidget. text\fR is the text to be shown in the tool tip. QToolTip makes a deep copy of this string.
.PP
This is the most common entry point to the QToolTip class; it is suitable for adding tool tips to buttons, check boxes, combo boxes and so on.
.SH "void QToolTip::add ( QWidget * widget, const QString & text, QToolTipGroup * group, const QString & longText ) \fC[static]\fR"
Adds a tool tip to \fIwidget,\fR and to tool tip group \fIgroup.\fR
.PP
\fItext\fR is the text shown in the tool tip and \fIlongText\fR is the text emitted from \fIgroup.\fR QToolTip makes deep copies of both strings.
.PP
Normally, \fIlongText\fR is shown in a status bar or similar.
.SH "void QToolTip::clear () \fC[protected]\fR"
Removes all tool tips for this tooltip's parent widget immediately.
.SH "bool QToolTip::enabled () \fC[static]\fR"
Returns whether tooltips are enabled globally.
.PP
See also setEnabled().
.SH "QFont QToolTip::font () \fC[static]\fR"
Returns the font common to all tool tips.
.PP
See also setFont().
.SH "QToolTipGroup * QToolTip::group () const"
Returns the tool tip group this QToolTip is a member of, of 0 if it isn't a member of any group.
.PP
The tool tip group is the object responsible for relaying contact between tool tips and a status bar or something else which can show a longer help text.
.PP
See also parentWidget() and QToolTipGroup.
.SH "void QToolTip::hide () \fC[static]\fR"
Hides any tip that is currently being shown.
.PP
Normally, there is no need to call this function; QToolTip takes care of showing and hiding the tips as the user moves the mouse.
.SH "virtual void QToolTip::maybeTip ( const QPoint & p ) \fC[virtual protected]\fR"
This pure virtual function is half of the most versatile interface QToolTip offers.
.PP
It is called when there is a chance that a tool tip should be shown, and must decide whether there is a tool tip for the point \fIp\fR in the widget this QToolTip object relates to.
.PP
\fIp\fR is given in that widget's local coordinates. Most maybeTip() implementation will be of the form:
.PP
.nf
.br
    if ( <something> ) {
.br
        tip( <something>, <something> );
.br
    }
.fi
.PP
The first argument to tip() (a rectangle) should include the \fIp,\fR or QToolTip, the user or both can be confused.
.PP
See also tip().
.SH "QPalette QToolTip::palette () \fC[static]\fR"
Returns the palette common to all tool tips.
.PP
See also setPalette().
.SH "QWidget * QToolTip::parentWidget () const"
Returns the widget this QToolTip applies to.
.PP
The tool tip is destroyed automatically when the parent widget is destroyed.
.PP
See also group().
.SH "void QToolTip::remove ( QWidget * widget ) \fC[static]\fR"
Remove the tool tip from \fIwidget.\fR
.PP
If there are more than one tool tip on \fIwidget,\fR only the one covering the entire widget is removed.
.SH "void QToolTip::remove ( QWidget * widget, const QRect & rect ) \fC[static]\fR"
Remove the tool tip for \fIrect\fR from \fIwidget.\fR
.PP
If there are more than one tool tip on \fIwidget,\fR only the one covering rectangle \fIrect\fR is removed.
.SH "void QToolTip::setEnabled ( bool enable ) \fC[static]\fR"
Sets the all tool tips to be enabled (shown when needed) or disabled (never shown).
.PP
By default, tool tips are enabled. Note that this function effects all tooltips in the entire application.
.PP
See also QToolTipGroup::setEnabled().
.SH "void QToolTip::setFont ( const QFont & font ) \fC[static]\fR"
Sets the font for all tool tips to \fIfont.\fR
.PP
See also font().
.SH "void QToolTip::setPalette ( const QPalette & palette ) \fC[static]\fR"
Sets the palette for all tool tips to \fIpalette.\fR
.PP
See also palette().
.SH "void QToolTip::tip ( const QRect & rect, const QString & text ) \fC[protected]\fR"
Pops up a tip saying \fItext\fR right now, and removes that tip once the cursor moves out of rectangle \fIrect\fR (which is given in the coordinate system of the widget this QToolTip relates to).
.PP
The tip will not come back if the cursor moves back; your maybeTip() has to reinstate it each time.
.SH "void QToolTip::tip ( const QRect & rect, const QString & text, const QString & groupText ) \fC[protected]\fR"
Pops up a tip saying \fItext\fR right now, and removes that tip once the cursor moves out of rectangle \fIrect.\fR
.PP
The tip will not come back if the cursor moves back; your maybeTip()
has to reinstate it each time.
.SH "SEE ALSO"
.BR http://doc.trolltech.com/qtooltip.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2001 Trolltech AS, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports make our job much simpler. Thank you.
.P
In case of content or formattting problems with this manual page, please
report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qtooltip.3qt) and the Qt
version (2.3.2).
