'\" t
.TH QXmlDefaultHandler 3qt "29 October 2001" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2001 Trolltech AS.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QXmlDefaultHandler \- Default implementation of all XML handler classes
.br
.PP
\fC#include <qxml.h>\fR
.PP
Inherits QXmlContentHandler, QXmlDTDHandler, QXmlDeclHandler, QXmlEntityResolver, QXmlErrorHandler and QXmlLexicalHandler.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQXmlDefaultHandler\fR () "
.br
.ti -1c
.BI "virtual \fB~QXmlDefaultHandler\fR () "
.br
.ti -1c
.BI "virtual void \fBsetDocumentLocator\fR ( QXmlLocator * locator ) "
.br
.ti -1c
.BI "virtual bool \fBstartDocument\fR () "
.br
.ti -1c
.BI "virtual bool \fBendDocument\fR () "
.br
.ti -1c
.BI "virtual bool \fBstartPrefixMapping\fR ( const QString & " "prefix" ", const QString & uri ) "
.br
.ti -1c
.BI "virtual bool \fBendPrefixMapping\fR ( const QString & prefix ) "
.br
.ti -1c
.BI "virtual bool \fBstartElement\fR ( const QString & " "namespaceURI" ", const QString & " "localName" ", const QString & " "qName" ", const QXmlAttributes & atts ) "
.br
.ti -1c
.BI "virtual bool \fBendElement\fR ( const QString & " "namespaceURI" ", const QString & " "localName" ", const QString & qName ) "
.br
.ti -1c
.BI "virtual bool \fBcharacters\fR ( const QString & ch ) "
.br
.ti -1c
.BI "virtual bool \fBignorableWhitespace\fR ( const QString & ch ) "
.br
.ti -1c
.BI "virtual bool \fBprocessingInstruction\fR ( const QString & " "target" ", const QString & data ) "
.br
.ti -1c
.BI "virtual bool \fBskippedEntity\fR ( const QString & name ) "
.br
.ti -1c
.BI "virtual bool \fBwarning\fR ( const QXmlParseException & exception ) "
.br
.ti -1c
.BI "virtual bool \fBerror\fR ( const QXmlParseException & exception ) "
.br
.ti -1c
.BI "virtual bool \fBfatalError\fR ( const QXmlParseException & exception ) "
.br
.ti -1c
.BI "virtual bool \fBnotationDecl\fR ( const QString & " "name" ", const QString & " "publicId" ", const QString & systemId ) "
.br
.ti -1c
.BI "virtual bool \fBunparsedEntityDecl\fR ( const QString & " "name" ", const QString & " "publicId" ", const QString & " "systemId" ", const QString & notationName ) "
.br
.ti -1c
.BI "virtual bool \fBresolveEntity\fR ( const QString & " "publicId" ", const QString & " "systemId" ", QXmlInputSource * ret ) "
.br
.ti -1c
.BI "virtual bool \fBstartDTD\fR ( const QString & " "name" ", const QString & " "publicId" ", const QString & systemId ) "
.br
.ti -1c
.BI "virtual bool \fBendDTD\fR () "
.br
.ti -1c
.BI "virtual bool \fBstartCDATA\fR () "
.br
.ti -1c
.BI "virtual bool \fBendCDATA\fR () "
.br
.ti -1c
.BI "virtual bool \fBcomment\fR ( const QString & ch ) "
.br
.ti -1c
.BI "virtual bool \fBattributeDecl\fR ( const QString & " "eName" ", const QString & " "aName" ", const QString & " "type" ", const QString & " "valueDefault" ", const QString & value ) "
.br
.ti -1c
.BI "virtual bool \fBinternalEntityDecl\fR ( const QString & " "name" ", const QString & value ) "
.br
.ti -1c
.BI "virtual bool \fBexternalEntityDecl\fR ( const QString & " "name" ", const QString & " "publicId" ", const QString & systemId ) "
.br
.ti -1c
.BI "virtual QString \fBerrorString\fR () "
.br
.in -1c
.SH DESCRIPTION
The QXmlDefaultHandler class provides a default implementation of all XML handler classes.
.PP
Very often you are only interested in parts of the things that that the reader reports to you. This class simply implements a default behaviour of the handler classes (most of the time: do nothing). Normally this is the class you subclass for implementing your customized handler.
.PP
See also the Introduction to SAX2.
.PP
See also QXmlDTDHandler, QXmlDeclHandler, QXmlContentHandler, QXmlEntityResolver, QXmlErrorHandler and QXmlLexicalHandler.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QXmlDefaultHandler::QXmlDefaultHandler ()"
Constructor.
.SH "QXmlDefaultHandler::~QXmlDefaultHandler () \fC[virtual]\fR"
Destructor.
.SH "bool QXmlDefaultHandler::attributeDecl ( const QString &, const QString &, const QString &, const QString &, const QString & ) \fC[virtual]\fR"
Does nothing.
.PP
Reimplemented from QXmlDeclHandler.
.SH "bool QXmlDefaultHandler::characters ( const QString & ) \fC[virtual]\fR"
Does nothing.
.PP
Reimplemented from QXmlContentHandler.
.SH "bool QXmlDefaultHandler::comment ( const QString & ) \fC[virtual]\fR"
Does nothing.
.PP
Reimplemented from QXmlLexicalHandler.
.SH "bool QXmlDefaultHandler::endCDATA () \fC[virtual]\fR"
Does nothing.
.PP
Reimplemented from QXmlLexicalHandler.
.SH "bool QXmlDefaultHandler::endDTD () \fC[virtual]\fR"
Does nothing.
.PP
Reimplemented from QXmlLexicalHandler.
.SH "bool QXmlDefaultHandler::endDocument () \fC[virtual]\fR"
Does nothing.
.PP
Reimplemented from QXmlContentHandler.
.SH "bool QXmlDefaultHandler::endElement ( const QString &, const QString &, const QString & ) \fC[virtual]\fR"
Does nothing.
.PP
Reimplemented from QXmlContentHandler.
.SH "bool QXmlDefaultHandler::endPrefixMapping ( const QString & ) \fC[virtual]\fR"
Does nothing.
.PP
Reimplemented from QXmlContentHandler.
.SH "bool QXmlDefaultHandler::error ( const QXmlParseException & ) \fC[virtual]\fR"
Does nothing.
.PP
Reimplemented from QXmlErrorHandler.
.SH "QString QXmlDefaultHandler::errorString () \fC[virtual]\fR"
Returns the default error string.
.PP
Reimplemented from QXmlDTDHandler.
.SH "bool QXmlDefaultHandler::externalEntityDecl ( const QString &, const QString &, const QString & ) \fC[virtual]\fR"
Does nothing.
.PP
Reimplemented from QXmlDeclHandler.
.SH "bool QXmlDefaultHandler::fatalError ( const QXmlParseException & ) \fC[virtual]\fR"
Does nothing.
.PP
Reimplemented from QXmlErrorHandler.
.SH "bool QXmlDefaultHandler::ignorableWhitespace ( const QString & ) \fC[virtual]\fR"
Does nothing.
.PP
Reimplemented from QXmlContentHandler.
.SH "bool QXmlDefaultHandler::internalEntityDecl ( const QString &, const QString & ) \fC[virtual]\fR"
Does nothing.
.PP
Reimplemented from QXmlDeclHandler.
.SH "bool QXmlDefaultHandler::notationDecl ( const QString &, const QString &, const QString & ) \fC[virtual]\fR"
Does nothing.
.PP
Reimplemented from QXmlDTDHandler.
.SH "bool QXmlDefaultHandler::processingInstruction ( const QString &, const QString & ) \fC[virtual]\fR"
Does nothing.
.PP
Reimplemented from QXmlContentHandler.
.SH "bool QXmlDefaultHandler::resolveEntity ( const QString &, const QString &, QXmlInputSource * ret ) \fC[virtual]\fR"
Always sets \fIret\fR to 0, so that the reader will use the system identifier provided in the XML document.
.PP
Reimplemented from QXmlEntityResolver.
.SH "void QXmlDefaultHandler::setDocumentLocator ( QXmlLocator * ) \fC[virtual]\fR"
Does nothing.
.PP
Reimplemented from QXmlContentHandler.
.SH "bool QXmlDefaultHandler::skippedEntity ( const QString & ) \fC[virtual]\fR"
Does nothing.
.PP
Reimplemented from QXmlContentHandler.
.SH "bool QXmlDefaultHandler::startCDATA () \fC[virtual]\fR"
Does nothing.
.PP
Reimplemented from QXmlLexicalHandler.
.SH "bool QXmlDefaultHandler::startDTD ( const QString &, const QString &, const QString & ) \fC[virtual]\fR"
Does nothing.
.PP
Reimplemented from QXmlLexicalHandler.
.SH "bool QXmlDefaultHandler::startDocument () \fC[virtual]\fR"
Does nothing.
.PP
Reimplemented from QXmlContentHandler.
.SH "bool QXmlDefaultHandler::startElement ( const QString &, const QString &, const QString &, const QXmlAttributes & ) \fC[virtual]\fR"
Does nothing.
.PP
Reimplemented from QXmlContentHandler.
.SH "bool QXmlDefaultHandler::startPrefixMapping ( const QString &, const QString & ) \fC[virtual]\fR"
Does nothing.
.PP
Reimplemented from QXmlContentHandler.
.SH "bool QXmlDefaultHandler::unparsedEntityDecl ( const QString &, const QString &, const QString &, const QString & ) \fC[virtual]\fR"
Does nothing.
.PP
Reimplemented from QXmlDTDHandler.
.SH "bool QXmlDefaultHandler::warning ( const QXmlParseException & ) \fC[virtual]\fR"
Does nothing.
.PP
Reimplemented from QXmlErrorHandler.
.SH "SEE ALSO"
.BR http://doc.trolltech.com/qxmldefaulthandler.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2001 Trolltech AS, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports make our job much simpler. Thank you.
.P
In case of content or formattting problems with this manual page, please
report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qxmldefaulthandler.3qt) and the Qt
version (2.3.2).
