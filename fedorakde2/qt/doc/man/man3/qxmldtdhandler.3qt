'\" t
.TH QXmlDTDHandler 3qt "29 October 2001" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2001 Trolltech AS.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QXmlDTDHandler \- Interface to report DTD content of XML data
.br
.PP
\fC#include <qxml.h>\fR
.PP
Inherited by QXmlDefaultHandler.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "virtual bool \fBnotationDecl\fR ( const QString & " "name" ", const QString & " "publicId" ", const QString & systemId ) "
.br
.ti -1c
.BI "virtual bool \fBunparsedEntityDecl\fR ( const QString & " "name" ", const QString & " "publicId" ", const QString & " "systemId" ", const QString & notationName ) "
.br
.ti -1c
.BI "virtual QString \fBerrorString\fR () "
.br
.in -1c
.SH DESCRIPTION
The QXmlDTDHandler class provides an interface to report DTD content of XML data.
.PP
If an application needs information about notations and unparsed entities, then the application implements this interface and registers an instance with QXmlReader::setDTDHandler().
.PP
Note that this interface includes only those DTD events that the XML recommendation requires processors to report: notation and unparsed entity declarations.
.PP
See also the Introduction to SAX2.
.PP
See also QXmlDeclHandler, QXmlContentHandler, QXmlEntityResolver, QXmlErrorHandler and QXmlLexicalHandler.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QString QXmlDTDHandler::errorString () \fC[virtual]\fR"
The reader calls this function to get an error string if any of the handler functions returns FALSE to him.
.PP
Reimplemented in QXmlDefaultHandler.
.SH "bool QXmlDTDHandler::notationDecl ( const QString & name, const QString & publicId, const QString & systemId ) \fC[virtual]\fR"
The reader calls this function when he has parsed a notation declaration.
.PP
The argument \fIname\fR is the notation name, \fIpublicId\fR is the notations's public identifier and \fIsystemId\fR is the notations's system identifier.
.PP
If this function returns FALSE the reader will stop parsing and will report an error. The reader will use the function errorString() to get the error message that will be used for reporting the error.
.PP
Reimplemented in QXmlDefaultHandler.
.SH "bool QXmlDTDHandler::unparsedEntityDecl ( const QString & name, const QString & publicId, const QString & systemId, const QString & notationName ) \fC[virtual]\fR"
The reader calls this function when he finds an unparsed entity declaration.
.PP
The argument \fIname\fR is the unparsed entity's name, \fIpublicId\fR is the entity's public identifier, \fIsystemId\fR is the entity's system identifier and \fInotation\fR is the name of the associated notation.
.PP
If this function returns FALSE the reader will stop parsing and will report an error. The reader will use the function errorString() to get the error message that will be used for reporting the error.
.PP
Reimplemented in QXmlDefaultHandler.
.SH "SEE ALSO"
.BR http://doc.trolltech.com/qxmldtdhandler.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2001 Trolltech AS, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports make our job much simpler. Thank you.
.P
In case of content or formattting problems with this manual page, please
report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qxmldtdhandler.3qt) and the Qt
version (2.3.2).
