'\" t
.TH QXmlSimpleReader 3qt "29 October 2001" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2001 Trolltech AS.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QXmlSimpleReader \- Implementation of a simple XML reader (i.e. parser)
.br
.PP
\fC#include <qxml.h>\fR
.PP
Inherits QXmlReader.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQXmlSimpleReader\fR () "
.br
.ti -1c
.BI "virtual \fB~QXmlSimpleReader\fR () "
.br
.ti -1c
.BI "virtual bool \fBfeature\fR ( const QString & " "name" ", bool * " "ok" " = 0 ) const"
.br
.ti -1c
.BI "virtual void \fBsetFeature\fR ( const QString & " "name" ", bool value ) "
.br
.ti -1c
.BI "virtual bool \fBhasFeature\fR ( const QString & name ) const"
.br
.ti -1c
.BI "virtual void* \fBproperty\fR ( const QString & " "name" ", bool * " "ok" " = 0 ) const"
.br
.ti -1c
.BI "virtual void \fBsetProperty\fR ( const QString & " "name" ", void * value ) "
.br
.ti -1c
.BI "virtual bool \fBhasProperty\fR ( const QString & name ) const"
.br
.in -1c
.SH DESCRIPTION
The QXmlSimpleReader class provides an implementation of a simple XML reader (i.e. parser).
.PP
This XML reader is sufficient for simple parsing tasks. Here is a short list of the properties of this reader:
.TP
well-formed parser
.TP
does not parse any external entities
.TP
can do namespace processing
.PP
For getting started see also the Quick start
.PP
Examples:
.(l
xml/tagreader/tagreader.cpp xml/tagreader
.)l-with-features/tagreader.cpp
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QXmlDTDHandler* QXmlSimpleReader::DTDHandler () const \fC[virtual]\fR"
Reimplemented for internal reasons; the API is not affected.
.PP
Reimplemented from QXmlReader.
.SH "QXmlSimpleReader::QXmlSimpleReader ()"
Constructs a simple XML reader.
.SH "QXmlSimpleReader::~QXmlSimpleReader () \fC[virtual]\fR"
Destroys a simple XML reader.
.SH "QXmlContentHandler* QXmlSimpleReader::contentHandler () const \fC[virtual]\fR"
Reimplemented for internal reasons; the API is not affected.
.PP
Reimplemented from QXmlReader.
.SH "QXmlDeclHandler* QXmlSimpleReader::declHandler () const \fC[virtual]\fR"
Reimplemented for internal reasons; the API is not affected.
.PP
Reimplemented from QXmlReader.
.SH "QXmlEntityResolver* QXmlSimpleReader::entityResolver () const \fC[virtual]\fR"
Reimplemented for internal reasons; the API is not affected.
.PP
Reimplemented from QXmlReader.
.SH "QXmlErrorHandler* QXmlSimpleReader::errorHandler () const \fC[virtual]\fR"
Reimplemented for internal reasons; the API is not affected.
.PP
Reimplemented from QXmlReader.
.SH "bool QXmlSimpleReader::feature ( const QString & name, bool * ok = 0 ) const \fC[virtual]\fR"
Gets the state of a feature.
.PP
See also setFeature() and hasFeature().
.PP
Reimplemented from QXmlReader.
.SH "bool QXmlSimpleReader::hasFeature ( const QString & name ) const \fC[virtual]\fR"
Returns TRUE if the class has a feature named \fIfeature,\fR otherwise FALSE.
.PP
See also setFeature() and feature().
.PP
Reimplemented from QXmlReader.
.SH "bool QXmlSimpleReader::hasProperty ( const QString & ) const \fC[virtual]\fR"
Returns FALSE since this class does not support any properties.
.PP
Reimplemented from QXmlReader.
.SH "QXmlLexicalHandler* QXmlSimpleReader::lexicalHandler () const \fC[virtual]\fR"
Reimplemented for internal reasons; the API is not affected.
.PP
Reimplemented from QXmlReader.
.SH "bool QXmlSimpleReader::parse ( const QXmlInputSource & input ) \fC[virtual]\fR"
Reimplemented for internal reasons; the API is not affected.
.PP
Examples:
.(l
xml/tagreader/tagreader.cpp xml/tagreader
.)l-with-features/tagreader.cpp
.PP
Reimplemented from QXmlReader.
.SH "void* QXmlSimpleReader::property ( const QString &, bool * ok = 0 ) const \fC[virtual]\fR"
Returns 0 since this class does not support any properties.
.PP
Reimplemented from QXmlReader.
.SH "void QXmlSimpleReader::setContentHandler ( QXmlContentHandler * handler ) \fC[virtual]\fR"
Reimplemented for internal reasons; the API is not affected.
.PP
Examples:
.(l
xml/tagreader/tagreader.cpp xml/tagreader
.)l-with-features/tagreader.cpp
.PP
Reimplemented from QXmlReader.
.SH "void QXmlSimpleReader::setDTDHandler ( QXmlDTDHandler * handler ) \fC[virtual]\fR"
Reimplemented for internal reasons; the API is not affected.
.PP
Reimplemented from QXmlReader.
.SH "void QXmlSimpleReader::setDeclHandler ( QXmlDeclHandler * handler ) \fC[virtual]\fR"
Reimplemented for internal reasons; the API is not affected.
.PP
Reimplemented from QXmlReader.
.SH "void QXmlSimpleReader::setEntityResolver ( QXmlEntityResolver * handler ) \fC[virtual]\fR"
Reimplemented for internal reasons; the API is not affected.
.PP
Reimplemented from QXmlReader.
.SH "void QXmlSimpleReader::setErrorHandler ( QXmlErrorHandler * handler ) \fC[virtual]\fR"
Reimplemented for internal reasons; the API is not affected.
.PP
Reimplemented from QXmlReader.
.SH "void QXmlSimpleReader::setFeature ( const QString & name, bool value ) \fC[virtual]\fR"
Sets the state of a feature.
.PP
Supported features are:
.TP
http://xml.org/sax/features/namespaces: if this feature is TRUE, namespace processing is performed
.TP
http://xml.org/sax/features/namespace-prefixes: if this feature is TRUE, the the original prefixed names and attributes used for namespace declarations are reported
.TP
http://trolltech.com/xml/features/report-whitespace-only-CharData: if this feature is TRUE, CharData that consists only of whitespace (and no other characters) is not reported via QXmlContentHandler::characters()
.PP
See also feature() and hasFeature().
.PP
Examples:
.(l
xml/tagreader
.)l-with-features/tagreader.cpp
.PP
Reimplemented from QXmlReader.
.SH "void QXmlSimpleReader::setLexicalHandler ( QXmlLexicalHandler * handler ) \fC[virtual]\fR"
Reimplemented for internal reasons; the API is not affected.
.PP
Reimplemented from QXmlReader.
.SH "void QXmlSimpleReader::setProperty ( const QString &, void * ) \fC[virtual]\fR"
Does nothing since this class does not support any properties.
.PP
Reimplemented from QXmlReader.
.SH "SEE ALSO"
.BR http://doc.trolltech.com/qxmlsimplereader.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2001 Trolltech AS, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports make our job much simpler. Thank you.
.P
In case of content or formattting problems with this manual page, please
report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qxmlsimplereader.3qt) and the Qt
version (2.3.2).
