// QMsDev.odl : Quellcode der Typbibliothek für QMsDev.dll

// Diese Datei wird mit dem Mktypelib-Tool bearbeitet
// produce the type library (QMsDev.tlb) zu erzeugen.

[	uuid(5F60EBF8-00BB-4EA4-9D88-5EC7A56170E4), version(1.0),
	helpstring ("QMSDEV Developer Studio Add-in") ]
library QMsDev
{
	importlib("stdole32.tlb");
	importlib("devshl.dll");
	importlib("ide\devdbg.pkg");
	

	//  Duale Schnittstelle für CCommands
	//
	//  Alle Befehle, die Ihr Add-In zu DevStudio hinzufügt,
	//   müssen in dieser Schnittstelle erscheinen. Sie können ClassView verwenden, 
      //   um Methoden zu dieser Schnittstelle hinzuzufügen. Dies führt zu 
	//   Stub-Implementierungen jener Methoden, die in der Klasse
	//   CCommands erscheinen.
	
	[	uuid(4E5FD2DD-F38D-47C9-B9AC-5A076208B75A),
		oleautomation,
		dual
	]

	interface ICommands : IDispatch
	{
		// Methoden
		[id(1)]
		HRESULT QMsDevStartDesigner();
		[id(2), helpstring("Methode QMsDevUseQt")] HRESULT QMsDevUseQt();
		[id(3), helpstring("Methode QMsDevAddMOCStep")] HRESULT QMsDevAddMOCStep();
		[id(4), helpstring("Methode QMsDevAddUICStep")] HRESULT QMsDevAddUICStep();
		[id(5), helpstring("Methode QMsDevGenerateQtProject")] HRESULT QMsDevGenerateQtProject();
		[id(6), helpstring("Methode QMsDevNewQtProject")] HRESULT QMsDevNewQtProject();
		[id(7), helpstring("Methode QMsDevAddQtDialog")] HRESULT QMsDevNewQtDialog();
	};

	//  Klassen-Informationen für CCommands

	[ uuid(7869DAE8-3A48-4625-8D4B-3716F330C52B) ]
	coclass Commands
	{
		[default] interface ICommands;
	};

	[ hidden, uuid(4C58C036-8860-418F-9204-493D52267BD6) ]
	coclass ApplicationEvents
	{
		[default] interface IApplicationEvents;
	}

	[ hidden, uuid(486F430D-B4B7-4000-9203-3CF99A7C63F4) ]
	coclass DebuggerEvents
	{
		[default] interface IDebuggerEvents;
	}

	//{{AFX_APPEND_ODL}}
	//}}AFX_APPEND_ODL}}
};
